"use strict";(self.webpackChunk_chanzuckerberg_eds=self.webpackChunk_chanzuckerberg_eds||[]).push([[9595],{"./src/components/NumberIcon/NumberIcon.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DifferentNumbers:()=>DifferentNumbers,Incomplete:()=>Incomplete,NumberIconList:()=>NumberIconList,Small:()=>Small,Success:()=>Success,SuccessSmall:()=>SuccessSmall,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_NumberIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/NumberIcon/NumberIcon.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Components/NumberIcon",component:_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,parameters:{badges:["1.0"]},args:{"aria-label":"Step 1",number:1},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"p-8"},Story())]},Default={},Small={args:{size:"sm"}},Success={args:{variant:"success"}},SuccessSmall={args:{size:"sm",variant:"success"}},Incomplete={args:{size:"sm",incomplete:!0,number:void 0,numberIconTitle:"Incomplete"}},DifferentNumbers={argTypes:{number:{table:{disable:!0}},"aria-label":{table:{disable:!0}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,[0,1,2,3,4,5,6,7,8,9,10,21,32,43,54,65,76,87,98].map((number=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,_extends({key:number},args,{"aria-label":`Step ${number}`,number})))))},NumberIconList={parameters:{badges:["1.0","implementationExample"]},render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-wrap gap-1"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,{"aria-label":"Item 1",number:1,size:"sm"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,{"aria-label":"Item 2",incomplete:!0,number:2,numberIconTitle:"incomplete step 2",size:"sm"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,{"aria-label":"Item 3",number:3,size:"sm"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,{"aria-label":"Item 4",incomplete:!0,number:4,numberIconTitle:"incomplete step 4",size:"sm"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,{"aria-label":"Item 5",incomplete:!0,number:5,numberIconTitle:"incomplete step 5",size:"sm"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_NumberIcon__WEBPACK_IMPORTED_MODULE_1__.y,{"aria-label":"Item 6",incomplete:!0,number:6,numberIconTitle:"incomplete step 6",size:"sm"}))};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'sm'\n  }\n}",...Small.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'success'\n  }\n}",...Success.parameters?.docs?.source}}},SuccessSmall.parameters={...SuccessSmall.parameters,docs:{...SuccessSmall.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'sm',\n    variant: 'success'\n  }\n}",...SuccessSmall.parameters?.docs?.source}}},Incomplete.parameters={...Incomplete.parameters,docs:{...Incomplete.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'sm',\n    incomplete: true,\n    number: undefined,\n    numberIconTitle: 'Incomplete'\n  }\n}",...Incomplete.parameters?.docs?.source},description:{story:"When `incomplete` is defined and there is a `numberIconTitle` on the circle icon, then this will render\nthe proper icon with the incomplete text provided foro that component instance.",...Incomplete.parameters?.docs?.description}}},DifferentNumbers.parameters={...DifferentNumbers.parameters,docs:{...DifferentNumbers.parameters?.docs,source:{originalSource:"{\n  /**\n   * Disables controls for args that have no affect on this story\n   */\n  argTypes: {\n    number: {\n      table: {\n        disable: true\n      }\n    },\n    'aria-label': {\n      table: {\n        disable: true\n      }\n    }\n  },\n  render: args => <div>\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21, 32, 43, 54, 65, 76, 87, 98].map(number => <NumberIcon key={number} {...args} aria-label={`Step ${number}`} number={number} />)}\n    </div>\n}",...DifferentNumbers.parameters?.docs?.source},description:{story:"`NumberIcon` supports individual digits, with a maximum of two digits. By default,\nthey are positioned as block-level elements. use `flex` or `display` to update positioning.",...DifferentNumbers.parameters?.docs?.description}}},NumberIconList.parameters={...NumberIconList.parameters,docs:{...NumberIconList.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    badges: [\'1.0\', \'implementationExample\']\n  },\n  render: () => <div className="flex flex-wrap gap-1">\n      <NumberIcon aria-label="Item 1" number={1} size="sm" />\n      <NumberIcon aria-label="Item 2" incomplete number={2} numberIconTitle="incomplete step 2" size="sm" />\n      <NumberIcon aria-label="Item 3" number={3} size="sm" />\n      <NumberIcon aria-label="Item 4" incomplete number={4} numberIconTitle="incomplete step 4" size="sm" />\n      <NumberIcon aria-label="Item 5" incomplete number={5} numberIconTitle="incomplete step 5" size="sm" />\n      <NumberIcon aria-label="Item 6" incomplete number={6} numberIconTitle="incomplete step 6" size="sm" />\n    </div>\n}',...NumberIconList.parameters?.docs?.source},description:{story:"This Implementation example shows how to use Number Icon to build a stepper-like component.\n\n- incomplete rows are aligned with each number icon to show progress",...NumberIconList.parameters?.docs?.description}}};const __namedExportsOrder=["Default","Small","Success","SuccessSmall","Incomplete","DifferentNumbers","NumberIconList"];try{Incomplete.displayName="Incomplete",Incomplete.__docgenInfo={description:"When `incomplete` is defined and there is a `numberIconTitle` on the circle icon, then this will render\nthe proper icon with the incomplete text provided foro that component instance.",displayName:"Incomplete",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/NumberIcon/NumberIcon.stories.tsx#Incomplete"]={docgenInfo:Incomplete.__docgenInfo,name:"Incomplete",path:"src/components/NumberIcon/NumberIcon.stories.tsx#Incomplete"})}catch(__react_docgen_typescript_loader_error){}try{DifferentNumbers.displayName="DifferentNumbers",DifferentNumbers.__docgenInfo={description:"`NumberIcon` supports individual digits, with a maximum of two digits. By default,\nthey are positioned as block-level elements. use `flex` or `display` to update positioning.",displayName:"DifferentNumbers",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/NumberIcon/NumberIcon.stories.tsx#DifferentNumbers"]={docgenInfo:DifferentNumbers.__docgenInfo,name:"DifferentNumbers",path:"src/components/NumberIcon/NumberIcon.stories.tsx#DifferentNumbers"})}catch(__react_docgen_typescript_loader_error){}try{NumberIconList.displayName="NumberIconList",NumberIconList.__docgenInfo={description:"This Implementation example shows how to use Number Icon to build a stepper-like component.\n\n- incomplete rows are aligned with each number icon to show progress",displayName:"NumberIconList",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/NumberIcon/NumberIcon.stories.tsx#NumberIconList"]={docgenInfo:NumberIconList.__docgenInfo,name:"NumberIconList",path:"src/components/NumberIcon/NumberIcon.stories.tsx#NumberIconList"})}catch(__react_docgen_typescript_loader_error){}}}]);