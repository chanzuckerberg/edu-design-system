@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    # CHECKBOX INPUT
\*------------------------------------*/

/**
 * Wraps the visually hidden checkbox input element and the visible sibling svg element.
 */
.input__wrapper {
  /* Centers the checkbox icon in the wrapper. */
  /* Aligns the checkbox with the first line of the label. */
  @apply relative inline-flex items-center self-start;
}
/**
 * The visually hidden input element for the checkbox. The visual checkmark is provided by an svg element.
 */
.checkbox__input {
  /* Removes default margins placed by browser for checkboxes. */
  /* Remove the checkbox from the page flow, positioning it on top of the SVG. */
  /* Set same dimensions as the CheckboxSvg element. */
  @apply cursor-pointer m-0 absolute left-1 h-4 w-4;
  /** 
   * Hide the input element visually.
   * This ensures the checkbox is still "physically" present so that all users,
   * especially on touch screen readers, still interact with the real checkbox element
   * where it would naturally be present. 
   */
   @apply opacity-0;
}

/**
 * The visible checkbox svg icon element.
 */
.checkbox__icon {
  color: var(--eds-theme-color-icon-brand-primary);
}
.checkbox__input:focus-visible + .checkbox__icon {
  @mixin focus;
  outline-offset: -2px;
}

@supports not selector(:focus-visible) {
  .checkbox__input:focus + .checkbox__icon {
    @mixin focus;
    outline-offset: -2px;
  }
}

/**
 * The disabled variant of the visible checkbbox svg icon.
 */
.checkbox__icon--disabled {
  color: var(--eds-theme-color-icon-disabled);
}

/**
 * The disabled status of the visually hidden input element.
 * Needed since the input element overlays the visible svg icon for user input and cursor.
 */
.checkbox__input:disabled {
  cursor: not-allowed;
}
