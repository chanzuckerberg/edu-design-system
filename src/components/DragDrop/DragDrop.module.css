@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    # DRAG DROP
\*------------------------------------*/

.drag-drop {
  position: relative;
  /**
   * Table object body with content overflowed left
   */
  &.eds-is-overflow-left {
    /**
     * Right overflow gradient for the overflow list
     */
    /* stylelint-disable-next-line max-nesting-depth */
    &:before {
      content: '';
      @apply block absolute;
      background: linear-gradient(
        to left,
        rgba(255, 255, 255, 0.001) 50%,
        var(--eds-theme-color-background-neutral-default)
      );
      height: 100%;
      top: 0;
      left: 0;
      @apply w-8 z-100;
    }
  }

  /**
   * Table object body with content overflowed right
   */
  &.eds-is-overflow-right {
    /**
     * Right overflow gradient for the overflow list
     */
    /* stylelint-disable-next-line max-nesting-depth */
    &:after {
      content: '';
      @apply block absolute;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.001) 50%,
        var(--eds-theme-color-background-neutral-default)
      );
      height: 100%;
      top: 0;
      right: 0;
      @apply w-8 z-100;
    }
  }
}

/**
 * Outer container for DragDrop component; provides <DragDropContext />, which wraps droppable components (i.e. containers) and provides them with context.
 * The `:where` pseudo class function allows easy overriding via className.
 */
:where(.drag-drop__inner) {
  /* Uses a flex row to align containers. */
  @apply flex overflow-auto;
}

/**
 * Drag drop container.
 */
.drag-drop__container {
  /* Set to display flex so empty state can span entire column. */
  @apply flex shrink-0 flex-col ml-4 w-80;
  /* Padding added to the top to account for outline of button. */
  padding-top: var(--eds-size-half);
  /**
   * First drag drop container.
   */
  &:first-of-type {
    /* Don't add left margin to left align with the rest of the content. */
    margin-left: 0;
  }
}

/**
 * An area that can be dropped into.
 */
.drag-drop__container-inner {
  @apply flex flex-col flex-1;
  background-color: var(--eds-theme-color-background-neutral-subtle);
  @apply list-none m-0 p-2 rounded;
  /*  DragDropContainer styles are included here rather than in the /DragDropContainer directory as a workaround to CSS Modules' locally scoped class names. */
  .drag-drop__container--empty & {
    @apply justify-center items-center p-8 text-text-neutral-subtle;
  }

  /**
   * When there are more than two containers, apply a border.
   */
  .drag-drop--multiple & {
    border: var(--eds-theme-border-width) solid
      var(--eds-theme-color-border-neutral-default);
  }
}

/**
 * Container that holds droppable content. 
 *
 * DragDropItem styles are included here rather than in the /DragDropItem directory as a workaround to CSS Modules' locally scoped class names.
 */

.drag-drop__item {
  position: relative;
  /*  For best experience, use a margin on a single side of an item to add a gap between items. Using a margin on both top and bottom, or using flex or grid gap spacing in the drag-drop-container, cause jumpy behavior. */
  @apply mb-2 bg-neutral-100 rounded-lg shadow-sm;
  border: var(--eds-theme-border-width) solid transparent;
  transition: border-color var(--eds-anim-fade-quick) var(--eds-anim-ease);

  &:last-child {
    margin-bottom: 0;
  }

  &:hover {
    border-color: var(--eds-theme-color-border-neutral-subtle);
  }

  @media screen and (prefers-reduced-motion) {
    transition: none;
  }

  /**
   * The unstyled variant removes all styling from items.
   */
  .drag-drop--unstyled & {
    background-color: unset;
    box-shadow: unset;
  }
}

/** 
 * Optional title div at the top of an item.
 */
.drag-drop__item-title {
  @mixin eds-typography-preset-007-bold;
  margin-bottom: var(--eds-size-2);
}

/**
 * Used with handles variant to wrap children.
 */
.drag-drop__item-content {
  flex-grow: 1;
}

/**
 * Wrapper for drag handle.
 */
.drag-drop__item-handle {
  @apply absolute top-px left-px flex justify-center items-center;
  height: calc(100% - 2px);
  @apply p-2 z-400 rounded-lg;
  background: var(--eds-theme-color-background-neutral-default);
  transition: opacity var(--eds-anim-fade-quick) var(--eds-anim-ease);

  @media screen and (prefers-reduced-motion) {
    transition: none;
  }

  .drag-drop__item--hover & {
    opacity: 0;
  }

  .drag-drop__item--hover:hover &,
  .drag-drop__item--hover:focus &,
  &:focus {
    opacity: 1;
  }
}
