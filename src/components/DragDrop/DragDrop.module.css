/* stylelint-disable max-nesting-depth */
/* stylelint-disable no-descending-specificity */

@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    #DRAGDROP
\*------------------------------------*/

/**
 * 1) Outer container for DragDrop component; provides <DragDropContext />, which wraps droppable components (i.e. containers) and provides them with context 
 * 2) Uses a flex row to align containers
 */
.drag-drop {
  display: flex;
  justify-content: space-around;
}

/**
* 1) An area that can be dropped into.
* 2) Explicitly giving container display type of 'block'. Avoid using flex; doing so may cause jumpy behavior when items are dropped.
* 3) If a minimum height is not set, all containers in the same context will have their height determined by the longest "list" of items, and will resize as items are moved, which may or may not be desirable. 
* 4) Setting a fixed width for containers avoids jumpy behavior caused by using flex grow or other non-fixed width methods.
*/
.drag-drop-container {
  display: block; /* 2 */
  margin: var(--eds-size-2);
  border-radius: var(--eds-border-radius-md);
  min-height: 630px; /* 3 */
  width: 437px; /* 4 */
  padding: var(--eds-size-1);

  /**
  * 1) Distinguish last container from first container (not used when more than two containers)
  * 2) When the container is empty, a background image may be displayed. This may be helpful when the app starts with all items in the first container
  * 3) When there are more than two containers, disable the empty background
  */
  &:last-of-type {
    background-color: var(--eds-color-neutral-200);

    .drag-drop--multiple & {
      background-color: unset;
    }

    /* 2 */
    &:empty {
      background-image: url('https://fakeimg.pl/240x120/?text=Drag%20in%20available%20projects');
      background-repeat: no-repeat;
      background-position: center;

      .drag-drop--multiple & {
        background-image: unset;
      }
    }
  }
  /**
  * 1) When there are more than two containers, apply a border
  */
  .drag-drop--multiple & {
    border: var(--eds-theme-border-width) solid
      var(--eds-theme-color-border-neutral-default);
  }
}

/**
* 1) Container that holds droppable content. Adding the unstyled prop removes all styling from items.
* 2) For best experience, use a margin on a single side of an item to add a gap between items. Using a margin on both top and bottom, or using flex or grid gap spacing in the drag-drop-container, cause jumpy behavior.
*/
.drag-drop:not(.drag-drop--unstyled) .drag-drop-item {
  padding: var(--eds-size-1);
  margin-bottom: var(--eds-size-1); /* 2 */
  background-color: var(--eds-color-neutral-100);
  border-radius: var(--eds-border-radius-md);
  box-shadow: var(--eds-box-shadow-sm);
}

/** 
* 1) Optional title div at the top of an item.
*/
.drag-drop-item--title {
  @mixin eds-typography-preset-007-bold;
  margin-bottom: var(--eds-size-2);
}