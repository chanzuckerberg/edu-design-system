@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    #CHECKBOX
\*------------------------------------*/

/**
 * A custom individual checkbox control
 * 1) Outer wrapper div for custom control
 * 2) Grid display aligns label and the checkbox
 * 3) Prevents control from being "squished" in 
 *    a flexbox parent
 */
.checkbox { /* 1 */
  position: relative;

  display: grid; /* 2 */
  align-items: flex-start;
  grid-template-columns: min-content 1fr;
  gap: var(--eds-size-1);
}

/**
 * Text labelling the checkbox.
 */
.label {
  color: var(--eds-theme-color-form-label-text);

  /* Shift label so the checkbox always appears vertically centered
  with the *first* line of text, in case label wraps. */
  /* margin-top: calc((var(--checkbox-svg-size) - var(--label-line-height)) / 2); */
}

/**
 * Size variants for the label.
 * 1) line-height is set to be same as checkbox size to center label text relative to the checkbox.
 */
.label--sm {
  @mixin eds-theme-typography-label-sm;
  line-height: var(--checkbox-svg-size); /* 1 */
}

.label--md {
  @mixin eds-theme-typography-label-md;
  line-height: var(--checkbox-svg-size); /* 1 */
}

/**
 * Wrapper for the checkbox, including the visually hidden input element.
 * 1) line-height is set to be same as checkbox size to equal checkbox size and prevent browser styling.
 */
.input__wrapper {
  /* position: relative; */
  line-height: var(--checkbox-svg-size); /* 1 */
}

/**
 * The visually hidden input element for the checkbox. The visual checkmark is provided by an svg element.
 * 1) Removes default margins placed by browser for checkboxes.
 * 2) Remove the checkbox from the page flow, positioning it on top of the SVG.
 * 3) Set same dimensions as the CheckboxSvg element.
 * 4) Hide the input element visually.
 *    This ensures the checkbox is still "physically" present so that all users,
 *    especially on touch screen readers, still interact with the real checkbox element
 *    where it would naturally be present.
 */
.checkbox__input {
  cursor: pointer;

  margin: 0; /* 1 */

  position: absolute; /* 2 */

  height: var(--checkbox-svg-size); /* 3 */
  width: var(--checkbox-svg-size);

  opacity: 0; /* 4 */
}

/**
 * The visible checkbox graphic.
 * 1) Provides a focus indicator outline around the checkbox.
 */
.checkbox__input+svg {
  vertical-align: top;

  display: inline-block;

  color: var(--eds-theme-color-icon-neutral-default);
  --checked-color: var(--eds-theme-color-icon-brand-primary);
}
.checkbox__input:checked+svg>.checkmark__outline {
  fill: var(--checked-color);
  stroke: var(--checked-color);
}
.checkbox__input:checked+svg>.checkmark__content {
  fill: var(--eds-theme-color-icon-neutral-default-knockout);
}
.checkbox__input:focus+svg {
  @mixin focus; /* 1 */
}

/**
 * Disabled styles 
 */
.checkbox__input:disabled {
  cursor: not-allowed;
}
.checkbox__input:disabled+svg {
  color: var(--eds-theme-color-icon-disabled);
  --checked-color: var(--eds-theme-color-icon-disabled);
}
.input__wrapper--disabled~.label {
  color: var(--eds-theme-color-text-disabled);
}
