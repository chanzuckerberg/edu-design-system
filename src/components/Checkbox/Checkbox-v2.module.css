@import '../../design-tokens/mixins.css';

.checkbox {
  display: flex;
  gap: 0.5rem;
}

.checkbox__input {
  height: 1.125rem;
  width: 1.125rem;

  /* The parent Checkbox component is a flex container. Make sure the input doesn't shrink. */
  flex-shrink: 0;

  /* Remove the browser's checkbox styles, allowing us to provide our own. */
  appearance: none;

  /* Magic value to center the checkbox on its label. */
  margin: 3px;

  border: 0.125rem solid currentColor;

  /* Place the ::before content smack in the middle of the input. */
  display: grid;
  place-content: center;

  border-radius: calc(var(--eds-theme-border-radius-objects-sm) * 1px);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  
}

.checkbox__input:checked::before {
  color: var(--eds-theme-color-text-neutral-default-inverse);
  content: '✓';
  text-align: center;

  /* Because the path does not have an explicit viewbox, this element's bounding box establishes
  one. In other words, the height/width here need to match the expected viewbox for the path. */
  height: 1.5rem;
  width: 1.5rem;
}

.checkbox__input:checked {
  background-color: currentColor;
  border: currentColor;
}

.checkbox__input:indeterminate::before {
  color: var(--eds-theme-color-text-neutral-default-inverse);
  content: '–';
  text-align: center;

  height: 1.5rem;
  width: 1.5rem;
  transform: translateY(-1px);
}

.checkbox__input:indeterminate {
  background-color: currentColor;
  border: currentColor;
}

.checkbox__labels {
  position: relative;
}

.checkbox__sub-label {
  display: block;

  color: var(--eds-theme-color-text-utility-default-secondary);
}

.checkbox__input:not(:checked):not(:indeterminate) {
  color: var(--eds-theme-color-border-utility-default-medium-emphasis);

  &:hover {
    color: var(--eds-theme-color-border-utility-default-medium-emphasis-hover);
    background-color: var(--eds-theme-color-background-utility-default-no-emphasis-hover);
  }

  &:active {
    color: var(--eds-theme-color-border-utility-default-medium-emphasis-active);
    background-color: var(--eds-theme-color-background-utility-default-no-emphasis-active);
  }

  .checkbox--error & {
    color: var(--eds-theme-color-text-utility-critical);

    &:hover {
      color: var(--eds-theme-color-border-utility-critical-hover);
      background-color: var(--eds-theme-color-background-utility-critical-no-emphasis-hover);
    }

    &:active {
      color: var(--eds-theme-color-border-utility-critical-active);
      background-color: var(--eds-theme-color-background-utility-critical-no-emphasis-active);
    }
  }
}

.checkbox__input:checked,
.checkbox__input:indeterminate {
  color: var(--eds-theme-color-border-utility-default-high-emphasis);

  &:hover {
    color: var(--eds-theme-color-border-utility-default-high-emphasis-hover);
  }

  &:active {
    color: var(--eds-theme-color-border-utility-default-high-emphasis-active);
  }

  .checkbox--error & {
    color: var(--eds-theme-color-text-utility-critical);

    &:hover {
      color: var(--eds-theme-color-border-utility-critical-hover);
    }

    &:active {
      color: var(--eds-theme-color-border-utility-critical-active);
    }
  }
}

.checkbox__input:disabled {
  color: var(--eds-theme-color-background-utility-disabled-medium-emphasis);
  cursor: not-allowed;

  &:not(:checked) {
    color: var(--eds-theme-color-border-utility-disabled);
    background-color: var(--eds-theme-color-text-utility-disabled-secondary);
  }

  &:checked,
  &:indeterminate {
    background-color: var(--eds-theme-color-background-utility-disabled-medium-emphasis);

    &::before {
      color: var(--eds-theme-color-text-utility-disabled-primary);

    }
  }
}

.checkbox__input:focus-visible {
  outline: 0.125rem solid var(--eds-theme-color-border-utility-focus);
}

@supports not selector(:focus-visible) {
  .checkbox__input {
    outline: 0.125rem solid var(--eds-theme-color-border-utility-focus);
  }
}
