// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Text /> BodyLarge story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-lg"
  >
    Body large
  </p>
</div>
`;

exports[`<Text /> BodyMedium story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-md"
  >
    Body medium
  </p>
</div>
`;

exports[`<Text /> BodySmall story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-sm"
  >
    Body small
  </p>
</div>
`;

exports[`<Text /> BodyXLarge story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-xl"
  >
    Body extra-large
  </p>
</div>
`;

exports[`<Text /> BodyXSmall story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-xs"
  >
    Body Xsmall
  </p>
</div>
`;

exports[`<Text /> Callout story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--callout"
  >
    Callout
  </p>
</div>
`;

exports[`<Text /> Caption story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--caption-md"
  >
    Caption
  </p>
</div>
`;

exports[`<Text /> Default story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-md"
  >
    Default &lt;Text /&gt; rendering
  </p>
</div>
`;

exports[`<Text /> OverridingFontFamily story renders snapshot 1`] = `
<div
  class="m-1"
>
  <p
    class="text text--body-md !font-secondary"
  >
    You can use utility classes to override the font family used for a given size
  </p>
</div>
`;

exports[`<Text /> UsingColorTokens story renders snapshot 1`] = `
<div
  class="m-1"
>
  <div>
    <p
      class="text text--body-xl text-utility-warning"
    >
      using 
      <code>
        text-utility-warning
      </code>
       utility class
    </p>
    <p
      class="text text--body-lg text-utility-success"
    >
      using 
      <code>
        text-utility-success
      </code>
       utility class
    </p>
    <p
      class="text text--body-md text-utility-error"
    >
      using 
      <code>
        text-utility-error
      </code>
       utility class
    </p>
    <p
      class="text text--body-sm text-[var(--eds-theme-color-text-utility-success)]"
    >
      using inline color
    </p>
  </div>
</div>
`;
