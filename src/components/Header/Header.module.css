/*------------------------------------*\
    # HEADER
\*------------------------------------*/

/**
 * Global container for the header component. This helps set the stage for header recipes across applications
 */
.header {
  display: flex;
  align-items: center;
  padding-top: var(--eds-size-1);
  padding-right: var(--eds-size-2);
  padding-bottom: var(--eds-size-1);
  padding-left: var(--eds-size-2);
  width: 100%;
  position: relative;
  z-index: var(--eds-z-index-500);
  background-color: var(--eds-theme-color-background-brand-primary-strong);
  color: var(--eds-theme-color-text-neutral-default-inverse);

  @media all and (min-width: $eds-bp-xl) {
    flex-direction: column;
    align-items: flex-start;
    width: auto;
    padding-top: var(--eds-size-6);
    padding-right: var(--eds-size-2-and-half);
    padding-bottom: var(--eds-size-2-and-half);
    padding-left: var(--eds-size-2-and-half);
    height: 100vh;
  }
}

/**
 * Container around sticky header.
 */
.header-sticky-container {
  height: 100vh;
  transition: all var(--eds-anim-move-quick) var(--eds-anim-ease);

  @media all and (max-width: $eds-bp-xl) {
    height: auto;
    position: static;
  }

  @media screen and (prefers-reduced-motion) {
    transition: none;
  }
}

/**
 * Pinned sticky header
 *
 * Pins the sticky header to the top of the page. Transitions in from above the viewport.
 */
.header--sticky.eds-is-pinned {
  @media all and (max-width: $eds-bp-xl) {
    position: fixed;
    transform: translateY(0%);
  }
}

/**
 * Sticky header with scrolled class applied
 *
 * Class is applied when the sticky header gets pinned/unpinned and animation is needed
 */
.header--sticky.eds-is-scrolled {
  @media all and (max-width: $eds-bp-xl) {
    transition: transform var(--eds-anim-fade-quick) var(--eds-anim-ease);
  }
}

/**
 * Unpinned sticky header.
 */
.header--sticky.eds-is-unpinned {
  @media all and (max-width: $eds-bp-xl) {
    position: fixed;
    /* Tuck header above the viewport to be pulled down when the pinned class is applied. */
    transform: translateY(-100%);
  }
}
