@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    # BUTTON
\*------------------------------------*/

/**
* Styled clickable element that is based on the native <button> element.
*/
.button {
 font: var(--eds-theme-typography-button-label);
 display: inline-flex;
 justify-content: center;
 align-items: center;
 /* Adds a gap between children to automatically handle spacing between icons and text. */
 gap: 0.75rem;
 border-width: calc(var(--eds-theme-border-width) * 1px);
 border-style: solid;
 border-radius: calc(var(--eds-theme-box-button-border-radius) * 1px);
 cursor: pointer;
 transition-property: color, background-color, border-color;
 transition-duration: calc(var(--eds-anim-fade-quick) * 1s);
 transition-timing-function: var(--eds-anim-ease);

 :where(svg) {
   /* Adds default size for icons passed in for consistency. */
   --icon-size-default: 2em;
   transition: color calc(var(--eds-anim-fade-quick) * 1s) var(--eds-anim-ease);

   @media screen and (prefers-reduced-motion) {
     transition: none;
   }
 }

 &:focus-visible {
   @mixin focus;
 }

 @supports not selector(:focus-visible) {
   &:focus {
     @mixin focus;
   }
 }

 @media screen and (prefers-reduced-motion) {
   transition: none;
 }

 &:disabled,
 &:disabled:hover {
   cursor: not-allowed;
 }
}

/**
* Margin 0 added becuase Safari has margin on buttons.
* Needs `:where` pseudoclass to reduce specificity so class overrides
*    for margin can happen where used.
*/
:where(.button) {
 margin: 0;
}

/**
* Primary brand clickable style
*/
:where(.button--primary).button--brand {
 border-color: var(--eds-theme-color-button-primary-brand-border);
 background-color: var(--eds-theme-color-button-primary-brand-background);
 color: var(--eds-theme-color-button-primary-brand-text);

 &:hover {
   border-color: var(--eds-theme-color-button-primary-brand-border-hover);
   background-color: var(--eds-theme-color-button-primary-brand-background-hover);
   color: var(--eds-theme-color-button-primary-brand-text-hover);
 }

 &:active {
   border-color: var(--eds-theme-color-button-primary-brand-border-active);
   background-color: var(--eds-theme-color-button-primary-brand-background-active);
   color: var(--eds-theme-color-button-primary-brand-text-active);
 }
}

/**
* Primary error clickable style
*/
:where(.button--primary).button--error {
 border-color: var(--eds-theme-color-button-primary-error-border);
 background-color: var(--eds-theme-color-button-primary-error-background);
 color: var(--eds-theme-color-button-primary-error-text);

 &:hover {
   border-color: var(--eds-theme-color-button-primary-error-border-hover);
   background-color: var(--eds-theme-color-button-primary-error-background-hover);
   color: var(--eds-theme-color-button-primary-error-text-hover);
 }

 &:active {
   border-color: var(--eds-theme-color-button-primary-error-border-active);
   background-color: var(--eds-theme-color-button-primary-error-background-active);
   color: var(--eds-theme-color-button-primary-error-text-active);
 }
}

/**
* Secondary brand clickable style
*/
:where(.button--secondary).button--brand {
 border-color: var(--eds-theme-color-button-secondary-brand-border);
 background-color: var(--eds-theme-color-button-secondary-brand-background);
 color: var(--eds-theme-color-button-secondary-brand-text);

 :where(svg) {
   color: var(--eds-theme-color-button-secondary-brand-icon);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-secondary-brand-border-hover);
   background-color: var(--eds-theme-color-button-secondary-brand-background-hover);
   color: var(--eds-theme-color-button-secondary-brand-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-brand-icon-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-secondary-brand-border-active);
   background-color: var(--eds-theme-color-button-secondary-brand-background-active);
   color: var(--eds-theme-color-button-secondary-brand-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-brand-icon-focus);
   }
 }
}

/**
* Secondary neutral clickable style
*/
:where(.button--secondary).button--neutral {
 border-color: var(--eds-theme-color-button-secondary-neutral-border);
 background-color: var(--eds-theme-color-button-secondary-neutral-background);
 color: var(--eds-theme-color-button-secondary-neutral-text);

 :where(svg) {
   color: var(--eds-theme-color-button-secondary-neutral-icon);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-secondary-neutral-border-hover);
   background-color: var(--eds-theme-color-button-secondary-neutral-background-hover);
   color: var(--eds-theme-color-button-secondary-neutral-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-neutral-icon-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-secondary-neutral-border-active);
   background-color: var(--eds-theme-color-button-secondary-neutral-background-active);
   color: var(--eds-theme-color-button-secondary-neutral-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-neutral-icon-active);
   }
 }
}

/**
* Secondary success clickable style
*/
:where(.button--secondary).button--success {
 border-color: var(--eds-theme-color-button-secondary-success-border);
 background-color: var(--eds-theme-color-button-secondary-success-background);
 color: var(--eds-theme-color-button-secondary-success-text);

 :where(svg) {
   color: var(--eds-theme-color-button-secondary-success-icon);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-secondary-success-border-hover);
   background-color: var(--eds-theme-color-button-secondary-success-background-hover);
   color: var(--eds-theme-color-button-secondary-success-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-success-icon-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-secondary-success-border-active);
   background-color: var(--eds-theme-color-button-secondary-success-background-active);
   color: var(--eds-theme-color-button-secondary-success-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-success-icon-active);
   }
 }
}

/**
* Secondary warning clickable style
*/
:where(.button--secondary).button--warning {
 border-color: var(--eds-theme-color-button-secondary-warning-border);
 background-color: var(--eds-theme-color-button-secondary-warning-background);
 color: var(--eds-theme-color-button-secondary-warning-text);

 :where(svg) {
   color: var(--eds-theme-color-button-secondary-warning-icon);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-secondary-warning-border-hover);
   background-color: var(--eds-theme-color-button-secondary-warning-background-hover);
   color: var(--eds-theme-color-button-secondary-warning-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-warning-icon-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-secondary-warning-border-active);
   background-color: var(--eds-theme-color-button-secondary-warning-background-active);
   color: var(--eds-theme-color-button-secondary-warning-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-warning-icon-active);
   }
 }
}

/**
* Secondary error clickable style
*/
:where(.button--secondary).button--error {
 border-color: var(--eds-theme-color-button-secondary-error-border);
 background-color: var(--eds-theme-color-button-secondary-error-background);
 color: var(--eds-theme-color-button-secondary-error-text);

 :where(svg) {
   color: var(--eds-theme-color-button-secondary-error-icon);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-secondary-error-border-hover);
   background-color: var(--eds-theme-color-button-secondary-error-background-hover);
   color: var(--eds-theme-color-button-secondary-error-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-error-icon-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-secondary-error-border-active);
   background-color: var(--eds-theme-color-button-secondary-error-background-active);
   color: var(--eds-theme-color-button-secondary-error-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-secondary-error-icon-active);
   }
 }
}

/**
* Icon brand clickable style
* 
* A clickable style that strips out borders, backgrounds, etc.
*
* Use for Close "X" buttons, tooltip icons, and other.
*/
:where(.button--icon).button--brand {
 border-color: var(--eds-theme-color-button-icon-brand-border);
 background-color: var(--eds-theme-color-button-icon-brand-background);
 color: var(--eds-theme-color-button-icon-brand-text);

 :where(svg) {
   color: var(--eds-theme-color-button-icon-brand);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-icon-brand-border-hover);
   background-color: var(--eds-theme-color-button-icon-brand-background-hover);
   color: var(--eds-theme-color-button-icon-brand-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-brand-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-icon-brand-border-active);
   background-color: var(--eds-theme-color-button-icon-brand-background-active);
   color: var(--eds-theme-color-button-icon-brand-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-brand-active);
   }
 }
}

/**
* Icon neutral clickable style
* 
* A clickable style that strips out borders, backgrounds, etc.
*
* Use for Close "X" buttons, tooltip icons, and other.
*/
:where(.button--icon).button--neutral {
 border-color: var(--eds-theme-color-button-icon-neutral-border);
 background-color: var(--eds-theme-color-button-icon-neutral-background);
 color: var(--eds-theme-color-button-icon-neutral-text);

 :where(svg) {
   color: var(--eds-theme-color-button-icon-neutral);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-icon-neutral-border-hover);
   background-color: var(--eds-theme-color-button-icon-neutral-background-hover);
   color: var(--eds-theme-color-button-icon-neutral-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-neutral-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-icon-neutral-border-active);
   background-color: var(--eds-theme-color-button-icon-neutral-background-active);
   color: var(--eds-theme-color-button-icon-neutral-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-neutral-active);
   }
 }
}

/**
* Icon success clickable style
* 
* A clickable style that strips out borders, backgrounds, etc.
*
* Use for Close "X" buttons, tooltip icons, and other.
*/
:where(.button--icon).button--success {
 border-color: var(--eds-theme-color-button-icon-success-border);
 background-color: var(--eds-theme-color-button-icon-success-background);
 color: var(--eds-theme-color-button-icon-success-text);

 :where(svg) {
   color: var(--eds-theme-color-button-icon-success);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-icon-success-border-hover);
   background-color: var(--eds-theme-color-button-icon-success-background-hover);
   color: var(--eds-theme-color-button-icon-success-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-success-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-icon-success-border-active);
   background-color: var(--eds-theme-color-button-icon-success-background-active);
   color: var(--eds-theme-color-button-icon-success-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-success-active);
   }
 }
}

/**
* Icon warning clickable style
* 
* A clickable style that strips out borders, backgrounds, etc.
*
* Use for Close "X" buttons, tooltip icons, and other.
*/
:where(.button--icon).button--warning {
 border-color: var(--eds-theme-color-button-icon-warning-border);
 background-color: var(--eds-theme-color-button-icon-warning-background);
 color: var(--eds-theme-color-button-icon-warning-text);

 :where(svg) {
   color: var(--eds-theme-color-button-icon-warning);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-icon-warning-border-hover);
   background-color: var(--eds-theme-color-button-icon-warning-background-hover);
   color: var(--eds-theme-color-button-icon-warning-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-warning-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-icon-warning-border-active);
   background-color: var(--eds-theme-color-button-icon-warning-background-active);
   color: var(--eds-theme-color-button-icon-warning-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-warning-active);
   }
 }
}

/**
* Icon error clickable style
* 
* A clickable style that strips out borders, backgrounds, etc.
*
* Use for Close "X" buttons, tooltip icons, and other.
*/
:where(.button--icon).button--error {
 border-color: var(--eds-theme-color-button-icon-error-border);
 background-color: var(--eds-theme-color-button-icon-error-background);
 color: var(--eds-theme-color-button-icon-error-text);

 :where(svg) {
   color: var(--eds-theme-color-button-icon-error);
 }

 &:hover {
   border-color: var(--eds-theme-color-button-icon-error-border-hover);
   background-color: var(--eds-theme-color-button-icon-error-background-hover);
   color: var(--eds-theme-color-button-icon-error-text-hover);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-error-hover);
   }
 }

 &:active {
   border-color: var(--eds-theme-color-button-icon-error-border-active);
   background-color: var(--eds-theme-color-button-icon-error-background-active);
   color: var(--eds-theme-color-button-icon-error-text-active);
   :where(svg) {
     color: var(--eds-theme-color-button-icon-error-active);
   }
 }
}

/**
* Small clickable style
*/
.button--sm {
 font: var(--eds-theme-typography-button-label-sm);
 /**
  * Height is used instead of vertical padding because the icon size we use would
  * cause the height to expand
  */
 height: calc(var(--eds-size-3) / 16 * 1rem);
 padding: 0 calc(var(--eds-size-1) / 16 * 1rem);
}

/**
* Medium clickable style
*/
.button--md {
 /**
  * Height is used instead of vertical padding because the icon size we use would
  * cause the height to expand
  */
 height: calc(var(--eds-size-4) / 16 * 1rem);
 padding: 0 calc(var(--eds-size-1) / 16 * 1rem);
}

/**
* Large clickable style
*/
.button--lg {
 /**
  * Height is used instead of vertical padding because the icon size we use would
  * cause the height to expand
  */
 height: calc(var(--eds-size-5) / 16 * 1rem);
 padding: 0 calc(var(--eds-size-2) / 16 * 1rem);
}

/**
* Full-width clickable style
* A block clickable style that fills 100% of the width of its container
*/
.button--full-width {
 width: 100%;
}


/**
 * Primary disabled button styles
 */
.button--primary {
  &:disabled,
  &:disabled:hover {
    border-color: var(--eds-theme-color-border-disabled);
    background-color: var(--eds-theme-color-background-disabled);
    color: var(--eds-theme-color-button-primary-brand-text);
  }
}

/**
 * Secondary disabled button styles
 */
.button--secondary {
  &:disabled,
  &:disabled:hover {
    border-color: var(--eds-theme-color-border-disabled);
    background-color: transparent;
    color: var(--eds-theme-color-text-disabled);

    svg {
      color: var(--eds-theme-color-text-disabled);
    }
  }
}

/**
 * Icon disabled button styles
 */
.button--icon {
  &:disabled,
  &:disabled:hover {
    border-color: var(--eds-theme-color-button-icon-brand-border);
    background-color: var(--eds-theme-color-button-icon-background);
    color: var(--eds-theme-color-text-disabled);

    svg {
      color: var(--eds-theme-color-text-disabled);
    }
  }
}

/**
 * Loading icon rotation style
 */
.button.eds-is-loading svg path {
  stroke: var(--eds-theme-color-text-disabled);
}

/** TODO: Remove ability for buttons to look like the link component in the next major version */

/**
 * Link button styles
 */
 .button--link {
  @mixin textLink;
 
  /**
   * Override default Clickable styles
   */
  border: 0;
  border-radius: 0;
  background-color: transparent;
  /**
   * Smaller gap between text and icon in link button style
   */
  gap: 0.25em;
 
  &:disabled,
  &:disabled:hover {
    color: var(--eds-theme-color-text-disabled);
    text-decoration-color: var(--eds-theme-color-text-disabled);
  }
 }
 
 /**
 * Needs `:where` pseudoclass to reduce specificity so class overrides
 * for margin can happen where used, but needs to be specific enough to override preflight.
 */
 a:where(.button--link),
 button:where(.button--link) {
  /* 2px padding gives the text breathing room in the focus state */
  padding: 2px;
  /**
   * -2px margin compensates for the padding so the link doesn't have too much space between it
   *  and surrounding text
   */
  margin: -2px;
 }
 
 /**
 * Link neutral clickable style
 */
 :where(.button--link).button--neutral {
  text-decoration-color: var(--eds-theme-color-link-neutral-text-decoration);
 
  &:hover {
    text-decoration-color: var(--eds-theme-color-link-neutral-text-decoration-hover);
  }
 
  &:focus-visible {
    background-color: var(--eds-theme-color-link-neutral-background-focus);
  }
 
  @supports not selector(:focus-visible) {
    &:focus {
      background-color: var(--eds-theme-color-link-neutral-background-focus);
    }
  }
 }