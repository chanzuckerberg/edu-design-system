@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    # BADGE
\*------------------------------------*/

/**
 * Badge wrapper to allow badge to be absolutely positioned.
 */
.badge__wrapper {
  position: relative;
  display: inline-block;
}

/**
 * Badge indicates a change in regards to its attached object.
 */
.badge {
  /**
   * Custom property allows for easy change of downstream size handling.
   * Kind of a source of truth for badge size related properties.
   */
  --badge-height: calc(calc(var(--eds-size-2-and-half) / 16 * 1rem) + 2 * calc(var(--eds-border-width-sm) * 1px));

  z-index: 100;

  display: flex;
  align-items: center;
  justify-content: center;

  position: absolute;
  top: calc(var(--badge-height) / -2);
  left: calc(100% - var(--badge-height) / 2);

  height: var(--badge-height);
  min-width: var(--badge-height);

  border: var(--eds-theme-color-text-neutral-default-inverse) solid
    calc(var(--eds-border-width-sm) * 1px);
  border-radius: calc(var(--eds-border-radius-full) * 1px);

  padding-left: calc(var(--eds-size-half) / 16 * 1rem);
  padding-right: calc(var(--eds-size-half) / 16 * 1rem);

  background-color: var(--eds-theme-color-background-brand-primary-strong);
  color: var(--eds-theme-color-text-neutral-default-inverse);

  font: var(--eds-theme-typography-caption-sm);
}

/**
 * Empty badge variant for visual indication purposes.
 */
.badge--empty {
  --badge-height: calc(var(--eds-size-2) / 16 * 1rem);
  padding: 0;
}
