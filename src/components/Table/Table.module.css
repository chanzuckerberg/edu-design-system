@import '../../design-tokens/mixins.css';

/*------------------------------------*\
	#TABLE
\*------------------------------------*/

/**
 * Data Table
 */
.table {
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  margin-bottom: var(--eds-size-2);
  position: relative;
}

/**
 * Table that overflows at a large breakpoint
 */
.table--overflow {
  min-width: 50rem;
}

.table--stacked {
  display: block;

  @media all and (min-width: $eds-bp-md) {
    display: table;
  }
}

/**
 * Table Caption
 */
.table__caption {
  @mixin eds-theme-typography-body-text-sm;
  margin-bottom: var(--eds-size-1);
}

/**
 * Table Header
 * 
 * First row of a table that contains the table header cells.
 */
.table__header {
  /**
   * Table header inside a stacked table.
   */
  .table--stacked & {
    display: none;

    @media all and (min-width: $eds-bp-md) {
      /* Hide on small screens */
      display: table-header-group;
    }
  }
}

/**
 * Table body
 * 
 * <tbody> tag, contains the table rows in the body of the table.
 */
.table__body {
  .table--stacked > & {
    display: block;
    width: 100%;

    @media all and (min-width: $eds-bp-md) {
      display: table-row-group;
    }
  }
}

/**
 * Table Row
 */
.table__row {
  vertical-align: top;
  border-bottom-width: var(--eds-theme-border-width);
  border-bottom-style: solid;
  border-bottom-color: var(--eds-theme-color-border-neutral-subtle);

  .table__header & {
    border-bottom-color: var(--eds-theme-color-border-neutral-default);
  }

  /**
   * Table row within zebra table
   */
  .table--zebra & {
    /**
     * Even table rows within zebra table
     */
    &:nth-child(even) {
      background: var(--eds-theme-color-background-neutral-medium);
    }
  }

  .table--stacked > .table__body & {
    display: block;
    width: 100%;
    border-top: var(--eds-theme-border-width) solid
      var(--eds-theme-color-border-neutral-subtle);
    border-right: var(--eds-theme-border-width) solid
      var(--eds-theme-color-border-neutral-subtle);
    border-bottom: var(--eds-theme-border-width) solid
      var(--eds-theme-color-border-neutral-subtle);
    border-left: var(--eds-theme-border-width) solid
      var(--eds-theme-color-border-neutral-subtle);
    border-radius: var(--eds-border-radius-lg);
    margin-bottom: var(--eds-size-2);
    padding: var(--eds-size-4) var(--eds-size-2);

    @media all and (min-width: $eds-bp-md) {
      display: table-row;
      border-top: none;
      border-right: none;
      border-left: none;
      border-radius: 0;
      padding: 0;
    }
  }
}

/**
 * Bare table row.
 */
.table__row--bare {
  /* Removes border. */
  border-bottom: none;
}

/**
 * Clickable table row
 */
.table__row--clickable {
  cursor: pointer;

  &:hover {
    background: var(--eds-theme-color-background-neutral-subtle);
  }
}

/**
* Table header cell and table header cell button
* 
* On table header cells that are not sortable, the container is a div.
*/
.table__header-cell,
/**
 * On table header cells that are sortable, the container is a button, 
 * but the text styling is the same as a non-sortable table header cell
 */
.table__header-cell-button {
  @mixin eds-theme-typography-label-sm;
  padding: var(--eds-size-1) var(--eds-size-1);
  text-align: left;
}

/**
 * Table header cell
 */
.table__header-cell {
  /**
  * Table header cell within table body
  *
  * Adjust the padding to match the table__cell padding for alignment.
  */
  .table__body & {
    padding: var(--eds-size-2) var(--eds-size-1);
  }
}

/**
* Table header cell button
*
* On table header cells that are sortable, the container is a button.
*/
.table__header-cell-button {
  display: inline-flex;
  gap: var(--eds-size-half);
  padding: 0;
  background: none;
  border: none;
  &:hover {
    cursor: pointer;
  }
  /* When column is sortable, add an inline icon after the title. */
  .table__header-cell-sort {
    display: inline;
  }
}

.table__header-cell-icon {
  position: relative;
  bottom: 1px;
}

/**
 * Table header cell contents
 *
 * A wrapper for the title and sort icon. Uses a flex row so that icon remains at
 * the bottom when one or more titles breaks into multiple lines .
 */
.table__header-cell-contents {
  display: flex;
  align-items: flex-end;
  gap: var(--eds-size-1-and-half);
}

/**
 * Table Cell
 */
.table__cell {
  @mixin eds-theme-typography-body-text-sm;

  @media all and (min-width: $eds-bp-md) {
    padding: var(--eds-size-2) var(--eds-size-1);
  }

  /**
   * Condensed table.
   */
  .table--condensed & {
    /*  shrinks padding between table rows. */
    padding: var(--eds-size-1) var(--eds-size-1);
  }

  /**
   * Table header cells
   */
  .table__header & {
    position: relative;
    padding: var(--eds-size-2) var(--eds-size-1-and-half) var(--eds-size-2)
      var(--eds-size-1);
    @mixin eds-theme-typography-overline-sm;
    border-bottom-width: var(--eds-theme-border-width);
    border-bottom-style: solid;
    border-bottom-color: var(--eds-theme-color-border-neutral-subtle);
    background-clip: padding-box;

    &.table__cell--align-left {
      text-align: left;
    }
    &.table__cell--align-right {
      text-align: right;
    }
    &.table__cell--align-center {
      text-align: center;
    }

    &.table__cell--valign-center {
      vertical-align: middle;
    }
  }

  /**
   * Header table cells in a stacked table
   */
  .table--stacked .table__header & {
    @media all and (max-width: $eds-bp-md) {
      /* stylelint-disable-next-line max-nesting-depth */
      &:after {
        content: none;
      }
    }
  }

  /**
   * Table cell inside a stacked table
   */
  .table--stacked & {
    display: flex;
    gap: var(--eds-size-1);
    width: 100%;
    padding-left: 0;
    padding-right: 0;

    &:before {
      /**
     * Take data-heading attribute and display
     * that value as a block-level title above
     * each table cell.
     */
      content: attr(data-heading);
      display: block;
      margin-right: auto;
      @mixin eds-theme-typography-body-text-sm-bold;

      /* stylelint-disable-next-line max-nesting-depth */
      @media all and (min-width: $eds-bp-md) {
        /**
         * Hide data-heading on large screens since
         * table header cells become visible 
         */
        content: none;
      }
    }

    @media all and (min-width: $eds-bp-md) {
      display: table-cell;
      width: auto;
      padding: var(--eds-size-2) var(--eds-size-1);
    }
  }

  /**
   * The first cell's column title is not displayed, allowing the first cell's
   * value to appear as the card's "title".
   */
  .table--stacked.table--highlight-first-cell & {
    &:first-child {
      /**
       * When using the stacked and highlight-first-cell variants, the 
       * first cell in each row gets padding-bottom added on smaller breakpoints.
       */
      padding-bottom: var(--eds-size-1);

      /* stylelint-disable-next-line max-nesting-depth */
      @media all and (min-width: $eds-bp-md) {
        padding-bottom: unset;
      }
    }

    &:first-child:before {
      content: none;
    }
  }

  /**
   * Table cell inside a lined table
   */
  .table--lined & {
    border-width: var(--eds-theme-border-width);
    border-style: solid;
    border-color: var(--eds-theme-color-border-neutral-subtle);
  }

  /**
   * First table cell inside a lined table
   */
  .table--lined &:first-child {
    border-left: none;
  }

  /**
   * Last table cell inside a lined table
   */
  .table--lined &:last-child {
    border-right: none;
  }

  /**
   * Table cell inside a lined table's header
   */
  .table--lined .table__header & {
    border-bottom-width: var(--eds-theme-border-width);

    &:after {
      content: none;
    }
  }

  /**
   * Table cell inside a lined table with stacked behavior.
   */
  .table--stacked.table--lined & {
    @media all and (max-width: $eds-bp-md) {
      /**
       * Remove table cell borders on small screens since
       * cells stack on top of each other and are displayed
       * as a single cluster with headings
       */
      border: 0;
    }
  }

  /**
   * First table cell within each row directly within table body of stacked table
   */
  .table--stacked.table--highlight-first-cell > .table__body > .table__row > & {
    &:first-child {
      /* stylelint-disable-next-line max-nesting-depth */
      @media all and (max-width: $eds-bp-md) {
        @mixin eds-theme-typography-title-md;
      }
    }
  }

  /**
   * Table cell inside a clickable table row.
   */
  .table__row--clickable & {
    /* Mimic clickable link styles. */
    @mixin textLink;
  }

  /**
   * Lists inside table
   *
   * If text wraps onto a new line, it gets indented.
   */
  > ul,
  > ol {
    @mixin reset;
    list-style: none;

    > li {
      margin-left: 1rem;
      text-indent: -1rem;
    }
  }
}

/**
  * Table Footer Cell
  */
.table__footer-cell {
  padding: var(--eds-size-2);
}

.table__cell-icon {
  display: none;
}

/**
 * Nested table
 */
.table .table {
  margin-bottom: 0;
}

/**
 * Table cell within a nested table that isn't a table header cell
 */
.table--stacked .table .table__cell:not(th) {
  padding-top: 0;

  @media all and (min-width: $eds-bp-md) {
    padding-top: var(--eds-size-2);
  }
}

/**
 * Table header cell within a nested table
 */
.table .table th.table__cell {
  padding-top: 0;
  padding-bottom: 0;
  @mixin eds-theme-typography-overline-sm;

  @media all and (min-width: $eds-bp-md) {
    width: 60%;
    padding-top: var(--eds-size-2);
    padding-bottom: var(--eds-size-2);
    @mixin eds-theme-typography-overline-sm;
  }
}

/**
 * Table header cell within a nested table
 */
.table .table .table__row:first-child th.table__cell {
  padding-top: 0;

  @media all and (min-width: $eds-bp-md) {
    padding-top: var(--eds-size-2);
  }
}
