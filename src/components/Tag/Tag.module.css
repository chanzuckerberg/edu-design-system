@import '../../design-tokens/mixins.css';

/*------------------------------------*\
    # TAG
\*------------------------------------*/

/**
 * The rounded rectangle container that houses information.
 */
.tag {
  width: max-content;
  height: calc(var(--eds-size-3) / 16 * 1rem);
  padding: calc(var(--eds-size-half) / 16 * 1rem) calc(var(--eds-size-1) / 16 * 1rem);

  display: inline-flex;
  align-items: center;

  /* border color matches the background color, unless a color variant is applied */
  border: calc(var(--eds-theme-border-width) * 1px) solid var(--tag-secondary-color) ;
  border-radius: calc(var(--eds-border-radius-md) * 1px);

  background-color: var(--tag-secondary-color);
  color: var(--tag-primary-color);
}

/**
 * Spacing between icon and label text, if icon present
 * TODO: perhaps use gap?
 */
.tag > :not(:last-child) {
  margin-right: calc(var(--eds-size-half) / 16 * 1rem);
}

/**
 * Keeps text centered and in one line.
 */
.tag__body {
  flex: 1 1 auto;

  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/**
 * Color variants.
 * TODO(next-major): remove these status colors
 */
:where(.tag--neutral) {
  --tag-primary-color: var(--eds-theme-color-text-neutral-default);
  --tag-secondary-color: var(--eds-theme-color-background-neutral-subtle);
  --tag-outline-color: var(--eds-theme-color-border-neutral-default);
}

:where(.tag--error) {
  --tag-primary-color: var(--eds-theme-color-text-utility-error);
  --tag-secondary-color: var(--eds-theme-color-background-utility-error);
  --tag-outline-color: var(--eds-theme-color-border-utility-error-default);
}

:where(.tag--success) {
  --tag-primary-color: var(--eds-theme-color-text-utility-success);
  --tag-secondary-color: var(--eds-theme-color-background-utility-success);
  --tag-outline-color: var(--eds-theme-color-border-utility-success-default);
}

:where(.tag--warning) {
  --tag-primary-color: var(--eds-theme-color-text-utility-warning);
  --tag-secondary-color: var(--eds-theme-color-background-utility-warning);
  --tag-outline-color: var(--eds-theme-color-border-utility-warning-default);
}

:where(.tag--brand) {
  --tag-primary-color: var(--eds-theme-color-text-brand-default);
  --tag-secondary-color: var(--eds-theme-color-background-brand-primary-default);
  --tag-outline-color: var(--eds-theme-color-border-brand-primary-default);
}

/**
 * Status color treatments
 */
:where(.tag--status-critical) {
  --tag-primary-color: var(--eds-theme-color-icon-utility-critical);
  --tag-secondary-color: var(--eds-theme-color-background-utility-critical-low-emphasis);
}

:where(.tag--status-favorable) {
  --tag-primary-color: var(--eds-theme-color-icon-utility-favorable);
  --tag-secondary-color: var(--eds-theme-color-background-utility-favorable-low-emphasis);
}

:where(.tag--status-warning) {
  --tag-primary-color: var(--eds-theme-color-icon-utility-warning);
  --tag-secondary-color: var(--eds-theme-color-background-utility-warning-low-emphasis);
}

:where(.tag--status-informational) {
  --tag-primary-color: var(--eds-theme-color-text-utility-informational);
  --tag-secondary-color: var(--eds-theme-color-background-utility-information-low-emphasis);
}

/**
 * Adds outline to the tag.
 * TODO(next-major): remove handling for outline in 2.0 component
 */
.tag--outline {
  border-color: var(--tag-outline-color);
}
