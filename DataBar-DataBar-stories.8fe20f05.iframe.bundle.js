"use strict";(self.webpackChunk_chanzuckerberg_eds=self.webpackChunk_chanzuckerberg_eds||[]).push([[7786],{"./node_modules/@geometricpanda/storybook-addon-badges/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NZ:()=>e});var o,e=((o=e||{}).DEFAULT="default",o.BETA="beta",o.STABLE="stable",o.NEEDS_REVISION="needs-revision",o.OBSOLETE="obsolete",o.EXPERIMENTAL="experimental",o.DEPRECATED="deprecated",o)},"./src/components/DataBar/DataBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InteractiveExample:()=>InteractiveExample,LargeValue:()=>LargeValue,NoSegments:()=>NoSegments,SmallValue:()=>SmallValue,TotalsLessThanMax:()=>TotalsLessThanMax,TotalsMax:()=>TotalsMax,TotalsMoreThanMax:()=>TotalsMoreThanMax,TotalsRightUnderMax:()=>TotalsRightUnderMax,default:()=>DataBar_stories});var dist=__webpack_require__("./node_modules/@geometricpanda/storybook-addon-badges/dist/index.mjs"),react=__webpack_require__("./node_modules/react/index.js"),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),useId=__webpack_require__("./src/util/useId.ts"),Text=__webpack_require__("./src/components/Text/Text.tsx"),Tooltip=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),DataBar_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].use[2]!./src/components/DataBar/DataBar.module.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(DataBar_module.Z,options);const DataBar_DataBar_module=DataBar_module.Z&&DataBar_module.Z.locals?DataBar_module.Z.locals:void 0;function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const DataBar=_ref=>{let{className,label,max=100,segments,variant="brand",...other}=_ref;const totalSegmentValue=segments.reduce(((previousValue,segment)=>previousValue+segment.value),0),isFull=totalSegmentValue>=max,segmentComponents=[],[focusableElementIndex,setFocusableElementIndex]=react.useState(0),segmentsRef=react.useRef([]),handleOnKeyDown=(e,index)=>{"ArrowLeft"===e.key&&index>0&&(setFocusableElementIndex(index-1),segmentsRef.current[index-1]?.focus()),"ArrowRight"===e.key&&index<segmentComponents.length-1&&(setFocusableElementIndex(index+1),segmentsRef.current[index+1]?.focus())};for(let index=0,accumulator=0;index<segments.length&&accumulator<max;index++){const segment=segments[index];accumulator+=segment.value;const percentage=Math.max(5,segment.value/max*100);segmentComponents.push(react.createElement(DataBar.Segment,{"aria-label":segment.text,key:`segment-${index}`,onKeyDown:e=>handleOnKeyDown(e,index),ref:el=>segmentsRef.current[index]=el,role:"gridcell",tabIndex:focusableElementIndex===index?0:-1,text:segment.text,variant,width:`${percentage}%`}))}segmentComponents.length||segmentComponents.push(react.createElement(DataBar.Segment,{key:"segment-empty",role:"gridcell",variant,width:"var(--eds-size-1)"}));const segmentSpaceClassName=(0,clsx_m.Z)(DataBar_DataBar_module["data-bar__segment-space"],!isFull&&DataBar_DataBar_module["data-bar__segment-space--incomplete"]),id=(0,useId.M)(),captionId=(0,useId.M)(),caption=totalSegmentValue+"/"+max;return react.createElement("div",{className},react.createElement("div",{className:DataBar_DataBar_module["data-bar__label-wrapper"]},react.createElement("label",{className:DataBar_DataBar_module["data-bar__label"],htmlFor:id},label),react.createElement(Text.x,{as:"span",id:captionId,size:"caption"},caption)),react.createElement("div",_extends({"aria-describedby":captionId,className:DataBar_DataBar_module["data-bar"],id,role:"grid"},other),react.createElement("div",{className:segmentSpaceClassName,role:"row"},segmentComponents)))},DataBarSegment=react.forwardRef(((_ref2,ref)=>{let{className,text,width,variant="brand",...other}=_ref2;const componentClassName=(0,clsx_m.Z)(DataBar_DataBar_module["data-bar-segment"],DataBar_DataBar_module[`data-bar-segment--${variant}`],text&&DataBar_DataBar_module["data-bar-segment--hoverable"],className),segmentComponent=react.createElement("div",_extends({className:componentClassName,ref,style:{width:`${width}`}},other));return text?react.createElement(Tooltip.u,{align:"bottom",text},segmentComponent):segmentComponent}));DataBarSegment.displayName="DataBarSegment",DataBar.Segment=DataBarSegment;try{DataBar.displayName="DataBarSegment",DataBar.__docgenInfo={description:"`import {DataBar} from \"@chanzuckerberg/eds\";`\n\nA data bar component that represents the relative completion of a task represented by one or more segments.\n\nExample usage:\n\n```tsx\n<DataBar\n id=\"data-bar\"\n max={100}\n segments={[\n   { value: 25, text: 'Segment 1' },\n   { value: 10, text: 'Segment 2' },\n   { value: 15, text: 'Segment 3' },\n ]} />\n```",displayName:"DataBarSegment",props:{className:{defaultValue:null,description:"CSS class names that can be appended to the component.",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Label associated with naming the data bar.",name:"label",required:!0,type:{name:"string"}},max:{defaultValue:{value:"100"},description:"Max value to be represented by the data bar.\nDefaults to 100 to act as a percentage bar.",name:"max",required:!1,type:{name:"number"}},segments:{defaultValue:null,description:"A list of segments to be represented by the data bar.",name:"segments",required:!0,type:{name:"Segment[]"}},variant:{defaultValue:{value:"brand"},description:"Color variant of the data bar. Decorates the segments.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"brand"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DataBar/DataBar.tsx#DataBarSegment"]={docgenInfo:DataBarSegment.__docgenInfo,name:"DataBarSegment",path:"src/components/DataBar/DataBar.tsx#DataBarSegment"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/Button.tsx"),ButtonGroup=__webpack_require__("./src/components/ButtonGroup/ButtonGroup.tsx");const DataBar_stories={title:"Components/DataBar",component:DataBar,args:{label:"Data bar",max:100,segments:[{value:25,text:"Segment 1"},{value:10,text:"Segment 2"},{value:15,text:"Segment 3"}]},parameters:{badges:["1.0",dist.NZ.DEPRECATED],backgrounds:{default:"eds-color-neutral-white"}},decorators:[Story=>react.createElement("div",{className:"m-4"},Story())]},TotalsLessThanMax={},TotalsMax={args:{max:50}},TotalsMoreThanMax={args:{max:25}},TotalsRightUnderMax={args:{max:51}},LargeValue={args:{max:100,segments:[{value:96,text:"Segment 1"}]}},SmallValue={args:{max:100,segments:[{value:1,text:"Segment 1"}]}},NoSegments={args:{segments:[]}},InteractiveExample={render:()=>{const[max,setMax]=react.useState(100),[segments,setSegments]=react.useState([{value:90,text:"Segment value 90"},{value:1,text:"Segment value 1"},{value:1,text:"Segment value 1"}]),[segmentValue,setSegmentValue]=react.useState(1);return react.createElement("div",null,react.createElement(DataBar,{label:"Interactive data bar",max,segments}),react.createElement("br",null),react.createElement("label",{htmlFor:"segment-value-input"},"Value add: "),react.createElement("input",{id:"segment-value-input",onChange:e=>{setSegmentValue(Number(e?.target?.value))},value:segmentValue}),react.createElement("br",null),react.createElement(ButtonGroup.h,null,react.createElement(Button.z,{onClick:()=>{segments.push({value:segmentValue||1,text:`Segment value ${segmentValue}`}),setSegments([...segments])},variant:"primary"},"Push segment"),react.createElement(Button.z,{onClick:()=>{segments.length>0&&(segments.pop(),setSegments([...segments]))},variant:"secondary"},"Pop segment")),react.createElement("br",null),react.createElement("label",{htmlFor:"max-value-input"},"Max: "),react.createElement("input",{id:"max-value-input",onChange:e=>{setMax(Number(e?.target?.value)||100)},value:max}))},parameters:{chromatic:{disableSnapshot:!0},snapshot:{skip:!0},docs:{source:{type:"dynamic"}}}};TotalsLessThanMax.parameters={...TotalsLessThanMax.parameters,docs:{...TotalsLessThanMax.parameters?.docs,source:{originalSource:"{}",...TotalsLessThanMax.parameters?.docs?.source}}},TotalsMax.parameters={...TotalsMax.parameters,docs:{...TotalsMax.parameters?.docs,source:{originalSource:"{\n  args: {\n    max: 50\n  }\n}",...TotalsMax.parameters?.docs?.source}}},TotalsMoreThanMax.parameters={...TotalsMoreThanMax.parameters,docs:{...TotalsMoreThanMax.parameters?.docs,source:{originalSource:"{\n  args: {\n    max: 25\n  }\n}",...TotalsMoreThanMax.parameters?.docs?.source}}},TotalsRightUnderMax.parameters={...TotalsRightUnderMax.parameters,docs:{...TotalsRightUnderMax.parameters?.docs,source:{originalSource:"{\n  args: {\n    max: 51\n  }\n}",...TotalsRightUnderMax.parameters?.docs?.source}}},LargeValue.parameters={...LargeValue.parameters,docs:{...LargeValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    max: 100,\n    segments: [{\n      value: 96,\n      text: 'Segment 1'\n    }]\n  }\n}",...LargeValue.parameters?.docs?.source}}},SmallValue.parameters={...SmallValue.parameters,docs:{...SmallValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    max: 100,\n    segments: [{\n      value: 1,\n      text: 'Segment 1'\n    }]\n  }\n}",...SmallValue.parameters?.docs?.source}}},NoSegments.parameters={...NoSegments.parameters,docs:{...NoSegments.parameters?.docs,source:{originalSource:"{\n  args: {\n    segments: []\n  }\n}",...NoSegments.parameters?.docs?.source}}},InteractiveExample.parameters={...InteractiveExample.parameters,docs:{...InteractiveExample.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    /* eslint-disable react-hooks/rules-of-hooks */\n    const [max, setMax] = React.useState(100);\n    const [segments, setSegments] = React.useState([{\n      value: 90,\n      text: \'Segment value 90\'\n    }, {\n      value: 1,\n      text: \'Segment value 1\'\n    }, {\n      value: 1,\n      text: \'Segment value 1\'\n    }]);\n    const [segmentValue, setSegmentValue] = React.useState(1);\n    /* eslint-enable react-hooks/rules-of-hooks */\n\n    const onPush = () => {\n      segments.push({\n        value: segmentValue || 1,\n        text: `Segment value ${segmentValue}`\n      });\n      setSegments([...segments]);\n    };\n    const onPop = () => {\n      if (segments.length > 0) {\n        segments.pop();\n        setSegments([...segments]);\n      }\n    };\n    return <div>\n        <DataBar label="Interactive data bar" max={max} segments={segments} />\n        <br />\n        <label htmlFor="segment-value-input">Value add: </label>\n        <input id="segment-value-input" onChange={e => {\n        setSegmentValue(Number(e?.target?.value));\n      }} value={segmentValue}></input>\n        <br />\n        <ButtonGroup>\n          <Button onClick={onPush} variant="primary">\n            Push segment\n          </Button>\n          <Button onClick={onPop} variant="secondary">\n            Pop segment\n          </Button>\n        </ButtonGroup>\n        <br />\n        <label htmlFor="max-value-input">Max: </label>\n        <input id="max-value-input" onChange={e => {\n        setMax(Number(e?.target?.value) || 100);\n      }} value={max}></input>\n      </div>;\n  },\n  parameters: {\n    /**\n     * For interactive purposes only, low value in snapping or checking for visual regression since they should be covered in the other stories.\n     */\n    chromatic: {\n      disableSnapshot: true\n    },\n    snapshot: {\n      skip: true\n    },\n    docs: {\n      source: {\n        type: \'dynamic\'\n      }\n    }\n  }\n}',...InteractiveExample.parameters?.docs?.source}}}},"./src/util/useId.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>useId});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let id=0;function genId(){return++id}const useId=react__WEBPACK_IMPORTED_MODULE_0__.useId??function useId(){return"eds-"+genId()}},"./node_modules/clsx/dist/clsx.m.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function clsx(){for(var e,t,f=0,n="";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].use[2]!./src/components/DataBar/DataBar.module.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"/**\n * Link button styles\n */\n/*------------------------------------*\\\n    # DATA BAR\n\\*------------------------------------*/\n/**\n * The data bar represents the relative completion of a task.\n */\n.InB1_Bp7ViNxr4N8XEnV {\n  /* 0.875rem, a summation of the data bar height of 0.75rem and the border width 1px */\n  --data-bar-height: calc(\n    var(--eds-size-1-and-half) + 2 * var(--eds-theme-border-width)\n  );\n  height: var(--data-bar-height);\n\n  background-color: var(--eds-theme-color-data-bar-background);\n\n  border: var(--eds-theme-color-data-bar-border) solid\n    var(--eds-theme-border-width);\n  /* Rounds the sides rather than making the bar elliptical. */\n  border-radius: var(--eds-border-radius-full);\n\n  /* Prevents segments from overflowing outside borders */\n  overflow: hidden;\n}\n/**\n * The label title above the data bar that provides an accessible name.\n */\n.RjZx_LyTfJufc4Z_cNEm {\n  font: var(--eds-theme-typography-label-md);\n  color: var(--eds-theme-color-text-neutral-strong);\n\n  margin-bottom: 0;\n}\n/**\n * Wraps the label and the caption description.\n */\n.X8dAWTi7OTuSakMgluG0 {\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  margin-bottom: var(--eds-size-1);\n}\n/**\n * The amount of space the segments can consume. Is overlayed on top of the containing bar.\n */\n.yaWE8WdQy5Ewczju85_l {\n  height: 100%;\n\n  display: flex;\n  gap: var(--eds-size-half);\n  /* Makes the last segment overlap the containing bar right border. */\n  width: calc(100% + 2 * var(--eds-theme-border-width));\n}\n/**\n * Shortens the amount of space the segments consume by an amount equal to the radius of the semicircle end of the containing bar (half the height of the bar).\n * Results in an empty space that visually indicates incompleteness of the relevant task.\n * Required due to disproportionately larger spacing given to small segments to make them visible.\n */\n/* prettier-ignore */\n.cEsyorB5e8iONKMnZaI3 {\n  width: calc(100% + 2 * var(--eds-theme-border-width) - 0.5 * var(--data-bar-height));\n}\n/*------------------------------------*\\\n    # DATA BAR SEGMENT\n\\*------------------------------------*/\n/**\n * A block that represents its progress in a data bar.\n */\n.p69E3kfVCrtk3jVHJiPG {\n  height: 100%;\n}\n/**\n * The pointer cursor indicates that the element is hoverable.\n * The non hoverable case is the default cursor, used for the empty state indicator.\n */\n.EEeh2zkvM3CFBkNQE17K:hover {\n  cursor: pointer;\n}\n/**\n * The color variants of the data bar segments.\n */\n.ldHwiyWeVURozssvcbG2 {\n  background-color: var(--eds-theme-color-background-brand-primary-strong);\n}\n/* prettier-ignore */\n.ldHwiyWeVURozssvcbG2.EEeh2zkvM3CFBkNQE17K:hover {\n  background-color: var(--eds-theme-color-background-brand-primary-strong-hover);\n}\n.mO_zfy7A1vxB8mHpoDh3 {\n  background-color: var(--eds-theme-color-icon-utility-success);\n}\n.mO_zfy7A1vxB8mHpoDh3.EEeh2zkvM3CFBkNQE17K:hover {\n  background-color: var(--eds-theme-color-icon-utility-success-hover);\n}\n","",{version:3,sources:["webpack://./src/design-tokens/mixins.css","webpack://./src/components/DataBar/DataBar.module.css"],names:[],mappings:"AAAA;;EAEE;ACAF;;uCAEuC;AAEvC;;EAEE;AACF;EACE,qFAAqF;EACrF;;GAEC;EACD,8BAA8B;;EAE9B,4DAA4D;;EAE5D;iCAC+B;EAC/B,4DAA4D;EAC5D,4CAA4C;;EAE5C,uDAAuD;EACvD,gBAAgB;AAClB;AAEA;;EAEE;AACF;EACE,0CAA0C;EAC1C,iDAAiD;;EAEjD,gBAAgB;AAClB;AAEA;;EAEE;AACF;EACE,aAAa;EACb,qBAAqB;EACrB,8BAA8B;;EAE9B,gCAAgC;AAClC;AAEA;;EAEE;AACF;EACE,YAAY;;EAEZ,aAAa;EACb,yBAAyB;EACzB,oEAAoE;EACpE,qDAAqD;AACvD;AACA;;;;EAIE;AACF,oBAAoB;AACpB;EACE,oFAAoF;AACtF;AAEA;;uCAEuC;AAEvC;;EAEE;AACF;EACE,YAAY;AACd;AAEA;;;EAGE;AACF;EACE,eAAe;AACjB;AAEA;;EAEE;AACF;EACE,wEAAwE;AAC1E;AACA,oBAAoB;AACpB;EACE,8EAA8E;AAChF;AAEA;EACE,6DAA6D;AAC/D;AACA;EACE,mEAAmE;AACrE",sourcesContent:["/**\n * Link button styles\n */\n@define-mixin textLink {\n  font-size: inherit;\n  font-weight: var(--eds-font-weight-medium);\n  line-height: inherit;\n\n  color: var(--eds-theme-color-link-brand-text);\n  text-decoration: underline;\n  text-decoration-color: var(--eds-theme-color-link-brand-text-decoration);\n  text-decoration-thickness: 2px;\n  text-underline-offset: 2px;\n\n  svg {\n    /* Has smaller icons than other button styles. */\n    --icon-size-default: 1.25em;\n  }\n\n  &:hover {\n    color: var(--eds-theme-color-link-brand-text-hover);\n    text-decoration-color: var(--eds-theme-color-link-brand-text-decoration-hover);\n  }\n\n  &:focus-visible {\n    /**\n     * Make the focus outline invisible but don't remove it. High contrast mode will remove the background\n     * color, but it will also make borders 100% opacity black.\n     */\n    outline: 1px solid transparent;\n    color: var(--eds-theme-color-link-brand-text-focus) !important;\n    text-decoration-color: var(--eds-theme-color-link-brand-text-decoration-focus) !important;\n    background-color: var(--eds-theme-color-link-brand-background-focus);\n  }\n\n  @supports not selector(:focus-visible) {\n    &:focus {\n      /**\n       * Make the focus outline invisible but don't remove it. High contrast mode will remove the background\n       * color, but it will also make borders 100% opacity black.\n       */\n      outline: 1px solid transparent;\n      color: var(--eds-theme-color-link-brand-text-focus) !important;\n      text-decoration-color: var(--eds-theme-color-link-brand-text-decoration-focus) !important;\n      background-color: var(--eds-theme-color-link-brand-background-focus);\n    }\n  }\n}\n\n@define-mixin TextLinkInverted {\n  @mixin textLink;\n  color: var(--eds-theme-color-text-neutral-default-inverse);\n\n  &:focus {\n    @mixin focusInverted;\n  }\n}\n\n@define-mixin focus {\n  outline: var(--eds-theme-box-focus-ring-outline-width) solid\n    var(--eds-theme-color-focus-ring);\n  outline-offset: var(--eds-theme-box-focus-ring-outline-offset);\n}\n\n@define-mixin focusInside {\n  @mixin focus;\n  outline-offset: calc(-1 * var(--eds-theme-box-focus-ring-outline-offset));\n}\n\n@define-mixin focusInverted {\n  @mixin focus;\n  outline-color: var(--eds-theme-color-focus-ring-inverted);\n}\n\n@define-mixin inputStyles {\n  font: var(--eds-theme-typography-form-input);\n  font-family: inherit;\n  -webkit-appearance: none;\n  width: 100%;\n  border-width: var(--eds-theme-form-border-width);\n  border-style: solid;\n  border-color: var(--eds-theme-color-form-border);\n  border-radius: var(--eds-theme-form-border-radius);\n  outline: none;\n  padding: var(--eds-size-1);\n  margin: 0;\n  color: var(--eds-theme-color-text-neutral-default);\n  background-color: var(--eds-theme-color-form-background);\n  transition: box-shadow var(--eds-anim-fade-quick) var(--eds-anim-ease),\n    border-color var(--eds-anim-fade-quick) var(--eds-anim-ease);\n\n  &:hover {\n    border-color: var(--eds-theme-color-form-border-hover);\n  }\n\n  &:focus {\n    @mixin focus;\n    border-color: var(--eds-theme-color-border-brand-primary-strong);\n  }\n\n  @media screen and (prefers-reduced-motion) {\n    transition: none;\n  }\n\n  /**\n   * Input error state\n   */\n  &.error {\n    /* TODO: should this color be applied when a field is in an :invalid state */\n    border-color: var(--eds-theme-color-border-utility-error-strong);\n  }\n\n  /**\n   * Disabled/read-only state\n   */\n  &:disabled,\n  &:read-only,\n  &:disabled::placeholder {\n    border-color: var(--eds-theme-color-border-disabled);\n    color: var(--eds-theme-color-text-disabled);\n    cursor: not-allowed;\n  }\n\n  &::placeholder {\n    @mixin placeholderStyles;\n  }\n}\n\n@define-mixin placeholderStyles {\n  color: var(--eds-theme-color-text-disabled);\n}\n\n@define-mixin fieldsetStyles {\n  display: block;\n  margin: 0;\n  padding: 0;\n  border: none;\n}\n\n@define-mixin legendReset {\n  display: inline-block;\n  padding: 0;\n  border: none;\n}\n\n@define-mixin visuallyHide {\n  position: absolute !important;\n  overflow: hidden !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  border: 0 !important;\n  clip: rect(1px, 1px, 1px, 1px) !important;\n}\n\n@define-mixin messagingBrand {\n  --messaging-border-color: var(--eds-theme-color-border-brand-primary-subtle);\n  --messaging-icon-color: var(--eds-theme-color-icon-brand-primary);\n\n  background: var(--eds-theme-color-background-brand-primary-default);\n  color: var(--eds-theme-color-text-brand-default);\n}\n\n@define-mixin messagingNeutral {\n  --messaging-border-color: var(--eds-theme-color-border-neutral-subtle);\n  --messaging-icon-color: var(--eds-theme-color-icon-neutral-subtle);\n\n  background: var(--eds-theme-color-background-neutral-subtle);\n  color: var(--eds-theme-color-text-neutral-default);\n}\n\n@define-mixin messagingSuccess {\n  --messaging-border-color: var(--eds-theme-color-border-utility-success-subtle);\n  --messaging-icon-color: var(--eds-theme-color-icon-utility-success);\n\n  background: var(--eds-theme-color-background-utility-success);\n  color: var(--eds-theme-color-text-utility-success);\n}\n\n@define-mixin messagingWarning {\n  --messaging-border-color: var(--eds-theme-color-border-utility-warning-subtle);\n  --messaging-icon-color: var(--eds-theme-color-icon-utility-warning);\n\n  background: var(--eds-theme-color-background-utility-warning);\n  color: var(--eds-theme-color-text-utility-warning);\n}\n\n@define-mixin messagingError {\n  --messaging-border-color: var(--eds-theme-color-border-utility-error-subtle);\n  --messaging-icon-color: var(--eds-theme-color-icon-utility-error);\n\n  background: var(--eds-theme-color-background-utility-error);\n  color: var(--eds-theme-color-text-utility-error);\n}\n\n@define-mixin messagingYield {\n  --messaging-border-color: var(--eds-theme-color-border-grade-revise-strong);\n  --messaging-icon-color: var(--eds-theme-color-border-grade-revise-strong);\n\n  background: var(--eds-theme-color-background-grade-revise-subtle);\n  color: var(--eds-theme-color-text-neutral-default);\n}\n","@import '../../design-tokens/mixins.css';\n\n/*------------------------------------*\\\n    # DATA BAR\n\\*------------------------------------*/\n\n/**\n * The data bar represents the relative completion of a task.\n */\n.data-bar {\n  /* 0.875rem, a summation of the data bar height of 0.75rem and the border width 1px */\n  --data-bar-height: calc(\n    var(--eds-size-1-and-half) + 2 * var(--eds-theme-border-width)\n  );\n  height: var(--data-bar-height);\n\n  background-color: var(--eds-theme-color-data-bar-background);\n\n  border: var(--eds-theme-color-data-bar-border) solid\n    var(--eds-theme-border-width);\n  /* Rounds the sides rather than making the bar elliptical. */\n  border-radius: var(--eds-border-radius-full);\n\n  /* Prevents segments from overflowing outside borders */\n  overflow: hidden;\n}\n\n/**\n * The label title above the data bar that provides an accessible name.\n */\n.data-bar__label {\n  font: var(--eds-theme-typography-label-md);\n  color: var(--eds-theme-color-text-neutral-strong);\n\n  margin-bottom: 0;\n}\n\n/**\n * Wraps the label and the caption description.\n */\n.data-bar__label-wrapper {\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  margin-bottom: var(--eds-size-1);\n}\n\n/**\n * The amount of space the segments can consume. Is overlayed on top of the containing bar.\n */\n.data-bar__segment-space {\n  height: 100%;\n\n  display: flex;\n  gap: var(--eds-size-half);\n  /* Makes the last segment overlap the containing bar right border. */\n  width: calc(100% + 2 * var(--eds-theme-border-width));\n}\n/**\n * Shortens the amount of space the segments consume by an amount equal to the radius of the semicircle end of the containing bar (half the height of the bar).\n * Results in an empty space that visually indicates incompleteness of the relevant task.\n * Required due to disproportionately larger spacing given to small segments to make them visible.\n */\n/* prettier-ignore */\n.data-bar__segment-space--incomplete {\n  width: calc(100% + 2 * var(--eds-theme-border-width) - 0.5 * var(--data-bar-height));\n}\n\n/*------------------------------------*\\\n    # DATA BAR SEGMENT\n\\*------------------------------------*/\n\n/**\n * A block that represents its progress in a data bar.\n */\n.data-bar-segment {\n  height: 100%;\n}\n\n/**\n * The pointer cursor indicates that the element is hoverable.\n * The non hoverable case is the default cursor, used for the empty state indicator.\n */\n.data-bar-segment--hoverable:hover {\n  cursor: pointer;\n}\n\n/**\n * The color variants of the data bar segments.\n */\n.data-bar-segment--brand {\n  background-color: var(--eds-theme-color-background-brand-primary-strong);\n}\n/* prettier-ignore */\n.data-bar-segment--brand.data-bar-segment--hoverable:hover {\n  background-color: var(--eds-theme-color-background-brand-primary-strong-hover);\n}\n\n.data-bar-segment--success {\n  background-color: var(--eds-theme-color-icon-utility-success);\n}\n.data-bar-segment--success.data-bar-segment--hoverable:hover {\n  background-color: var(--eds-theme-color-icon-utility-success-hover);\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"data-bar":"InB1_Bp7ViNxr4N8XEnV","data-bar__label":"RjZx_LyTfJufc4Z_cNEm","data-bar__label-wrapper":"X8dAWTi7OTuSakMgluG0","data-bar__segment-space":"yaWE8WdQy5Ewczju85_l","data-bar__segment-space--incomplete":"cEsyorB5e8iONKMnZaI3","data-bar-segment":"p69E3kfVCrtk3jVHJiPG","data-bar-segment--hoverable":"EEeh2zkvM3CFBkNQE17K","data-bar-segment--brand":"ldHwiyWeVURozssvcbG2","data-bar-segment--success":"mO_zfy7A1vxB8mHpoDh3"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);