"use strict";(self.webpackChunk_chanzuckerberg_eds=self.webpackChunk_chanzuckerberg_eds||[]).push([[6262],{"./.storybook/components/DesignTokens/Tier3/Colors.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Button:()=>Button,Checkbox:()=>Checkbox,DataBar:()=>DataBar,FocusRing:()=>FocusRing,Form:()=>Form,Link:()=>Link,Modal:()=>Modal,ProgressBar:()=>ProgressBar,Toggle:()=>Toggle,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Section/Section.tsx"),_util_filterTokens__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/util/filterTokens.ts"),_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/components/ColorList/ColorList.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Design Tokens/Tier 3: Component/Colors",parameters:{axe:{skip:!0}}},getListItems=_ref=>{let{filterTerm,figmaTokenHeader,tailwindClassHeader,getTailwindClassPrefix=stringMatch=>stringMatch.includes("background")?"bg":stringMatch.includes("border")?"border":"text"}=_ref;return(0,_util_filterTokens__WEBPACK_IMPORTED_MODULE_1__.Z)(filterTerm).map((_ref2=>{let{name,value}=_ref2;const specifier=name.slice(name.indexOf(filterTerm)+filterTerm.length+1);return{name,value,figmaToken:figmaTokenHeader+"/"+specifier,tailwindClass:getTailwindClassPrefix(specifier)+"-"+tailwindClassHeader+"-"+specifier}}))},Button={parameters:{chromatic:{disableSnapshot:!0}},render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Button Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-button",figmaTokenHeader:"button",tailwindClassHeader:"button"})})))},Checkbox={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Checkbox Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-checkbox",figmaTokenHeader:"checkbox",tailwindClassHeader:"checkbox"})})))},DataBar={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Data Bar Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-data-bar",figmaTokenHeader:"data bar",tailwindClassHeader:"data-bar"})})))},Form={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Form Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-form",figmaTokenHeader:"form",tailwindClassHeader:"form"})})))},Link={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Link Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-link",figmaTokenHeader:"link",tailwindClassHeader:"link"})})))},Modal={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Modal Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-modal",figmaTokenHeader:"modal",tailwindClassHeader:"modal"})})))},ProgressBar={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Progress Bar Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-progress-bar",figmaTokenHeader:"progress bar",tailwindClassHeader:"progress-bar"})})))},Toggle={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Toggle Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-toggle",figmaTokenHeader:"toggle",tailwindClassHeader:"toggle"})})))},FocusRing={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.$,{title:"Focus Ring Colors"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ColorList_ColorList__WEBPACK_IMPORTED_MODULE_3__.Q,{listItems:getListItems({filterTerm:"eds-theme-color-focus",figmaTokenHeader:"focus",tailwindClassHeader:"focus",getTailwindClassPrefix:()=>"(outline/border)"})})))};Button.parameters={...Button.parameters,docs:{...Button.parameters?.docs,source:{originalSource:"{\n  // story is too large to be snapped\n  // TODO: when button colors are more in sync with mocks, should be less colors so might fit then\n  parameters: {\n    chromatic: {\n      disableSnapshot: true\n    }\n  },\n  render: () => <div>\n      <Section title=\"Button Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-button',\n        figmaTokenHeader: 'button',\n        tailwindClassHeader: 'button'\n      })} />\n      </Section>\n    </div>\n}",...Button.parameters?.docs?.source}}},Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Checkbox Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-checkbox',\n        figmaTokenHeader: 'checkbox',\n        tailwindClassHeader: 'checkbox'\n      })} />\n      </Section>\n    </div>\n}",...Checkbox.parameters?.docs?.source}}},DataBar.parameters={...DataBar.parameters,docs:{...DataBar.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Data Bar Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-data-bar',\n        figmaTokenHeader: 'data bar',\n        tailwindClassHeader: 'data-bar'\n      })} />\n      </Section>\n    </div>\n}",...DataBar.parameters?.docs?.source}}},Form.parameters={...Form.parameters,docs:{...Form.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Form Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-form',\n        figmaTokenHeader: 'form',\n        tailwindClassHeader: 'form'\n      })} />\n      </Section>\n    </div>\n}",...Form.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Link Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-link',\n        figmaTokenHeader: 'link',\n        tailwindClassHeader: 'link'\n      })} />\n      </Section>\n    </div>\n}",...Link.parameters?.docs?.source}}},Modal.parameters={...Modal.parameters,docs:{...Modal.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Modal Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-modal',\n        figmaTokenHeader: 'modal',\n        tailwindClassHeader: 'modal'\n      })} />\n      </Section>\n    </div>\n}",...Modal.parameters?.docs?.source}}},ProgressBar.parameters={...ProgressBar.parameters,docs:{...ProgressBar.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Progress Bar Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-progress-bar',\n        figmaTokenHeader: 'progress bar',\n        tailwindClassHeader: 'progress-bar'\n      })} />\n      </Section>\n    </div>\n}",...ProgressBar.parameters?.docs?.source}}},Toggle.parameters={...Toggle.parameters,docs:{...Toggle.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Toggle Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-toggle',\n        figmaTokenHeader: 'toggle',\n        tailwindClassHeader: 'toggle'\n      })} />\n      </Section>\n    </div>\n}",...Toggle.parameters?.docs?.source}}},FocusRing.parameters={...FocusRing.parameters,docs:{...FocusRing.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Focus Ring Colors\">\n        <ColorList listItems={getListItems({\n        filterTerm: 'eds-theme-color-focus',\n        figmaTokenHeader: 'focus',\n        tailwindClassHeader: 'focus',\n        getTailwindClassPrefix: () => '(outline/border)'\n      })} />\n      </Section>\n    </div>\n}",...FocusRing.parameters?.docs?.source}}}}}]);