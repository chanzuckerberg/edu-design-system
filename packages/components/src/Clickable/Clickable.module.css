.button {
  /* Base Styles */
  @apply rounded border-2 transition-colors inline-flex items-center;

  /* Base Text Styles */
  @apply font-bold;
}

/* Component Sizes */
.sizeSmall {
  @apply px-5 py-2 text-xs leading-3;
}

.sizeMedium {
  @apply px-5 py-2 text-sm;
}

.sizeLarge {
  @apply px-6 py-4 text-sm;
}

/* Button Colors */
.colorBrand {
  --button-primary-color: var(--eds-color-brand-600);
  --button-secondary-color: var(--eds-color-white);
  --button-tertiary-color: var(--eds-color-brand-100);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --button-primary-color: var(--eds-color-brand-700);
  }

  &:active,
  &.stateActive {
    /* TODO: Replace with brand active color */
    --button-primary-color: #312b9e;
  }

  /* override the hover/focus values */
  &:disabled {
    --button-primary-color: var(--eds-color-brand-300);
  }
}

.colorAlert {
  --button-primary-color: var(--eds-color-alert-600);
  --button-secondary-color: var(--eds-color-white);
  --button-tertiary-color: var(--eds-color-alert-100);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --button-primary-color: var(--eds-color-alert-700);
  }

  &:active,
  &.stateActive {
    /* TODO: Replace with alert active color */
    --button-primary-color: #a4002c;
  }

  /* override the hover/focus values */
  &:disabled {
    --button-primary-color: var(--eds-color-alert-300);
  }
}
  
.colorNeutral {
  --button-primary-color: var(--eds-color-neutral-600);
  --button-secondary-color: var(--eds-color-white);
  --button-tertiary-color: var(--eds-color-neutral-100);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --button-primary-color: var(--eds-color-neutral-700);
  }

  &:active,
  &.stateActive {
    /* TODO: Replace with neutral active color */
    --button-primary-color: var(--eds-color-neutral-700);
  }

  /* override the hover/focus values */
  &:disabled {
    --button-primary-color: var(--eds-color-neutral-300);
  }
}
  
.colorSuccess {
  --button-primary-color: var(--eds-color-success-600);
  --button-secondary-color: var(--eds-color-white);
  --button-tertiary-color: var(--eds-color-success-100);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --button-primary-color: var(--eds-color-success-700);
  }

  &:active,
  &.stateActive {
    /* TODO: Replace with success active color */
    --button-primary-color: #005a30;
  }

  /* override the hover/focus values */
  &:disabled {
    --button-primary-color: var(--eds-color-success-300);
  }
}

.colorWarning {
  --button-primary-color: var(--eds-color-warning-600);
  --button-secondary-color: var(--eds-color-white);
  --button-tertiary-color: var(--eds-color-warning-100);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --button-primary-color: var(--eds-color-warning-700);
  }

  &:active,
  &.stateActive {
    /* TODO: Replace with warning active color */
    --button-primary-color: #952d00;
  }

  /* override the hover/focus values */
  &:disabled {
    --button-primary-color: var(--eds-color-warning-300);
  }
}

.variantFlat {
  background-color: var(--button-primary-color);
  border-color: var(--button-primary-color);
  color: var(--button-secondary-color);
}

.variantOutline {
  background-color: transparent;
  border-color: var(--button-primary-color);
  color: var(--button-primary-color);

  
  &:focus,
  &.stateFocus {
    background-color: transparent;
    color: var(--button-primary-color);
  }

  &:hover,
  &.stateHover {
    background-color: var(--button-primary-color);
    color: var(--button-secondary-color);
  }
  
  &:disabled {
    background-color: transparent;
    color: var(--button-primary-color);
  }
}

.variantLink {
  @apply px-0 py-0 underline border-none;

  color: var(--button-primary-color);

  /* button should defer to surrounding text for size/weight/line-height/case */
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  text-transform: inherit;

  &:hover,
  &.stateHover {
    background-color: var(--button-tertiary-color);
  }
  
  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    text-decoration-thickness: 2px;
  }

  /* override the hover/focus values */
  &:disabled {
    background-color: initial;
    text-decoration-thickness: auto;
  }
}

/* comes after other styles to override hover behaviors */
.button:focus,
.button.stateFocus {
  /* Focus Outline */
  @apply outline-none ring-info-400 ring;
}

.button:disabled {
  @apply cursor-not-allowed;
}
