.button {
  /* Base Styles */

  /* Using motion-reduce:transition-none here because motion-safe:transition-colors doesn't seem to
     be having an effect. :( */
  @apply rounded border-2 transition-colors motion-reduce:transition-none inline-flex items-center;

  /* Base Text Styles */
  @apply font-bold;

  /* Default variable values */
  --plain-background-color: transparent;
}

/* Style icons that may be in the button children */
.button svg {
  --svg-icon-size: 2em;
}

/* Component Sizes */
.sizeExtraSmall {
  @apply px-1 h-6 text-xs leading-3;
}

.sizeSmall {
  @apply px-1 h-6 text-xs leading-3;
}

.sizeMedium {
  @apply px-4 h-8 text-xs leading-3;
}

.sizeLarge {
  @apply px-4 h-10 text-sm;
}

/* Button Colors */
.colorBrand {
  --primary-color: var(--eds-color-brand-600);
  --secondary-color: var(--eds-color-white);
  --link-color: var(--eds-color-brand-700);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --primary-color: var(--eds-color-brand-700);
    --link-color: var(--eds-color-brand-800);
    --plain-background-color: var(--eds-color-brand-100);
  }

  &:active,
  &.stateActive {
    --primary-color: var(--eds-color-brand-800);
    --plain-background-color: var(--eds-color-brand-600);
  }

  /* override the hover/focus values */
  &:disabled {
    --primary-color: var(--eds-color-brand-300);
    --plain-background-color: transparent;
  }
}

.colorAlert {
  --primary-color: var(--eds-color-alert-600);
  --secondary-color: var(--eds-color-white);
  --link-color: var(--eds-color-alert-700);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --primary-color: var(--eds-color-alert-700);
    --link-color: var(--eds-color-alert-800);
    --plain-background-color: var(--eds-color-alert-100);
  }

  &:active,
  &.stateActive {
    --primary-color: var(--eds-color-alert-800);
    --plain-background-color: var(--eds-color-alert-600);
  }

  /* override the hover/focus values */
  &:disabled {
    --primary-color: var(--eds-color-alert-300);
    --plain-background-color: transparent;
  }
}

.colorNeutral {
  --primary-color: var(--eds-color-neutral-500);
  --secondary-color: var(--eds-color-white);
  --link-color: var(--eds-color-neutral-600);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --primary-color: var(--eds-color-neutral-600);
    --link-color: var(--eds-color-neutral-700);
    --plain-background-color: var(--eds-color-neutral-100);
  }

  &:active,
  &.stateActive {
    --primary-color: var(--eds-color-neutral-700);
    --plain-background-color: var(--eds-color-neutral-600);
  }

  /* override the hover/focus values */
  &:disabled {
    --primary-color: var(--eds-color-neutral-300);
    --plain-background-color: transparent;
  }
}

.colorSuccess {
  --primary-color: var(--eds-color-success-600);
  --secondary-color: var(--eds-color-white);
  --link-color: var(--eds-color-success-700);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --primary-color: var(--eds-color-success-700);
    --link-color: var(--eds-color-success-800);
    --plain-background-color: var(--eds-color-success-100);
  }

  &:active,
  &.stateActive {
    --primary-color: var(--eds-color-success-800);
    --plain-background-color: var(--eds-color-success-600);
  }

  /* override the hover/focus values */
  &:disabled {
    --primary-color: var(--eds-color-success-300);
    --plain-background-color: transparent;
  }
}

.colorWarning {
  --primary-color: var(--eds-color-warning-600);
  --secondary-color: var(--eds-color-white);
  --link-color: var(--eds-color-warning-700);

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    --primary-color: var(--eds-color-warning-700);
    --link-color: var(--eds-color-warning-800);
    --plain-background-color: var(--eds-color-warning-100);
  }

  &:active,
  &.stateActive {
    --primary-color: var(--eds-color-warning-800);
    --plain-background-color: var(--eds-color-warning-600);
  }

  /* override the hover/focus values */
  &:disabled {
    --primary-color: var(--eds-color-warning-300);
    --plain-background-color: transparent;
  }
}

.variantFlat {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: var(--secondary-color);
}

.variantOutline {
  background-color: transparent;
  border-color: var(--primary-color);
  color: var(--primary-color);

  &:focus,
  &.stateFocus {
    background-color: transparent;
    color: var(--primary-color);
  }

  &:hover,
  &.stateHover {
    background-color: var(--primary-color);
    color: var(--secondary-color);
  }

  &:disabled {
    background-color: transparent;
    color: var(--primary-color);
  }
}

.variantLink {
  @apply px-0 py-0 underline border-none font-bold;

  color: var(--link-color);

  /* button should defer to surrounding text for size/line-height/case */
  font-size: inherit;
  line-height: inherit;
  text-transform: inherit;

  &:hover,
  &.stateHover,
  &:focus,
  &.stateFocus {
    text-decoration-thickness: 2px;
  }

  &:active,
  &.stateActive,
  &:disabled {
    color: var(--primary-color);
  }

  /* override the hover/focus values */
  &:disabled {
    text-decoration-thickness: auto;
  }
}

.variantPlain {
  color: var(--link-color);
  border: var(--plain-background-color);
  background-color: var(--plain-background-color);

  &:focus,
  &.stateFocus {
    color: var(--primary-color);
  }

  &:hover,
  &.stateHover {
    color: var(--primary-color);
  }

  &:active,
  &.stateActive {
    color: var(--secondary-color);
  }

  &:disabled {
    color: var(--primary-color);
  }
}

/* Link icons should be the same size as the text */
.variantLink svg {
  --svg-icon-size: 1em;
}

/* comes after other styles to override hover behaviors */
.button:focus,
.button.stateFocus {
  /* Focus Outline */
  @apply outline-none ring-info-400 ring;
}

.button:disabled {
  @apply cursor-not-allowed;
}
