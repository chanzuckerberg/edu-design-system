"use strict";(self.webpackChunk_chanzuckerberg_eds=self.webpackChunk_chanzuckerberg_eds||[]).push([[1286],{"./.storybook/components/DesignTokens/Tier3/Sizes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Sizes:()=>Sizes,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Section/Section.tsx"),_src__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Grid/Grid.tsx"),_util_filterTokens__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/util/filterTokens.ts"),_TokenSpecimen_TokenSpecimen__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./.storybook/components/TokenSpecimen/TokenSpecimen.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Design Tokens/Tier 3: Component",parameters:{axe:{skip:!0}}},Sizes={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.$,{title:"Slider Size"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.r,null,(0,_util_filterTokens__WEBPACK_IMPORTED_MODULE_3__.Z)("eds-theme-size").map((function(listItem){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_2__.r.Item,{key:listItem.name},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TokenSpecimen_TokenSpecimen__WEBPACK_IMPORTED_MODULE_4__.T,{inlineStyles:{width:`var(${listItem.name})`,height:`var(${listItem.name})`,minHeight:"0"},name:listItem.name,value:listItem.value}))})))))};Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:"{\n  render: () => <div>\n      <Section title=\"Slider Size\">\n        <Grid>\n          {filterTokens(`eds-theme-size`).map(function (listItem) {\n          return <Grid.Item key={listItem.name}>\n                <TokenSpecimen inlineStyles={{\n              width: `var(${listItem.name})`,\n              height: `var(${listItem.name})`,\n              minHeight: '0'\n            }} name={listItem.name} value={listItem.value} />\n              </Grid.Item>;\n        })}\n        </Grid>\n      </Section>\n    </div>\n}",...Sizes.parameters?.docs?.source}}}}}]);