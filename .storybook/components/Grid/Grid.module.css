/*------------------------------------*\
    # LAYOUT GRID
\*------------------------------------*/

/**
 * Layout Grid is a flexible component
 * allowing for a variety of responsive layout
 * components
 */
 .grid {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -1.5rem;

  > * {
    padding: var(--eds-size-1-and-half);
    width: 100%;
  }

  @supports (display: grid) {
    margin: 0;
    display: grid;
    grid-row-gap: var(--eds-size-3);
    grid-column-gap: var(--eds-size-3);

    > * {
      padding: 0;
      width: auto;
    }
  }
}

.grid--gap-sm {
  gap: var(--eds-size-1);
}

/**
 * 1 to 3 grid pattern
 *
 * This pattern stacks grid items on top of each
 * other until they can sit comfortably beside each other.
 */
.grid--1-3up {
  margin: 0 -1.5rem;

  @media all and (min-width: $eds-bp-lg) {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -1.5rem;
  }

  @supports (display: grid) {
    display: grid;
    margin: 0;

    @media all and (min-width: $eds-bp-lg) {
      grid-template-columns: 1fr 1fr 1fr;
    }
  }
}

.grid--side-by-side {
  grid-template-columns: 1fr 1fr;
}

/**
 * 2up grid pattern
 *
 * This pattern stacks grid items on top of each
 * other until they can sit comfortably beside each other.
 */
.grid--2up {
  @media all and (min-width: $eds-bp-md) {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -1.5rem;
  }

  @supports (display: grid) {
    display: grid;
    margin: 0;

    @media all and (min-width: $eds-bp-md) {
      grid-template-columns: 1fr 1fr;
    }
  }
}

/**
 * 3up grid pattern
 *
 * This pattern stacks grid items on top of each
 * other until they can sit comfortably beside each other.
 */
.grid--3up {
  @media all and (min-width: $eds-bp-md) {
    display: flex;
    flex-wrap: wrap;
    margin: 0 var(--eds-size-1-and-half);
  }

  @supports (display: grid) {
    display: grid;
    margin: 0;
    grid-template-columns: repeat(auto-fill, 1fr);

    @media all and (min-width: $eds-bp-md) {
      grid-template-columns: 1fr 1fr;
    }

    @media all and (min-width: $eds-bp-lg) {
      grid-template-columns: 1fr 1fr 1fr;
    }
  }
}

/**
 * 4up grid pattern
 *
 * This pattern stacks grid items on top of each
 * other until they can sit comfortably beside each other.
 */
.grid--4up {
  @media all and (min-width: $eds-bp-md) {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -1.5rem;
  }

  @supports (display: grid) {
    display: grid;
    margin: 0;

    @media all and (min-width: $eds-bp-md) {
      grid-template-columns: 1fr 1fr;
    }

    @media all and (min-width: $eds-bp-lg) {
      grid-template-columns: 1fr 1fr 1fr;
    }

    @media all and (min-width: $eds-bp-xl) {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }
  }
}

/**
 * 1-2-4up grid pattern
 *
 * yields a Grid whose Grid items are stacked on small screens, transforms to a 2-across pattern, and
 * ultimately transforms to a 4-across pattern
 */
.grid--1-2-4up {
  @media all and (min-width: $eds-bp-md) {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -1.5rem;
  }

  @supports (display: grid) {
    display: grid;
    margin: 0;

    @media all and (min-width: $eds-bp-md) {
      grid-template-columns: 1fr 1fr;
    }

    @media all and (min-width: $eds-bp-lg) {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }
  }
}

/**
 * 1-2-1up grid pattern
 *
 * yields a Grid whose Grid items are stacked on small screens, transforms to a 2-across pattern, and
 * ultimately transforms back to a 1-across pattern
 */
.grid--1-2-1up {
  @media all and (min-width: $eds-bp-md) {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -1.5rem;
  }

  @supports (display: grid) {
    display: grid;
    margin: 0;

    @media all and (min-width: $eds-bp-md) {
      grid-template-columns: 1fr 1fr;
    }

    @media all and (min-width: $eds-bp-xl) {
      grid-template-columns: 1fr;
    }
  }
}

/*------------------------------------*\
    # GRID ITEM
\*------------------------------------*/
/**
 * Direct child of grid
 */
 .grid__item {
  .grid & {
    padding: var(--eds-size-1-and-half);
    width: 100%;

    @supports (display: grid) {
      padding: 0;
    }
  }

  /**
   * Grid item that span 2 columns
   */
  &.grid__item.grid__item--span-2 {
    width: 100%;

    @supports (display: grid) {
      grid-column: 1 / -1;
    }
  }

  .grid--1-3up & {
    margin: 0 -1.5rem;

    @media all and (min-width: $eds-bp-lg) {
      width: 33.33%;
    }

    @supports (display: grid) {
      width: 100%;
      margin: 0;
    }
  }

  .grid--2up & {
    @media all and (min-width: $eds-bp-md) {
      width: 50%;
    }

    @supports (display: grid) {
      width: 100%;
    }
  }

  .grid--3up & {
    @media all and (min-width: $eds-bp-md) {
      width: 50%;
    }

    @media all and (min-width: $eds-bp-lg) {
      width: 33.33%;
    }

    @supports (display: grid) {
      width: 100%;
    }
  }

  .grid--3up-alt & {
    @media all and (min-width: $eds-bp-md) {
      width: 50%;
    }

    @media all and (min-width: $eds-bp-lg) {
      width: 33.33%;
    }

    @supports (display: grid) {
      width: 100%;
    }
  }

  .grid--4up & {
    @media all and (min-width: $eds-bp-md) {
      width: 50%;
    }

    @media all and (min-width: $eds-bp-lg) {
      width: 33.33%;
    }

    @media all and (min-width: $eds-bp-xl) {
      width: 25%;
    }

    @supports (display: grid) {
      width: 100%;
    }
  }
}
